{"id": "47f770583ea6004dd264e3c2c2ea0812af2f533e", "text": "Christians behaving themselves like Mahomedans.\n\n4. The natives soon had reason to suspect the viceroy's sincerity in his expressions of regret at the proceedings of which they complained. For about this time the Dominican friars, under pretence of building a convent, erected a fortress on the island of Solor, which, as soon as finished, the viceroy garrisoned with a strong force. The natives very naturally felt indignant at this additional encroachment, and took every opportunity to attack the garrison. The monks, forgetful of their peaceable profession, took an active part in these skirmishes, and many of them fell sword in hand.\n\nThe Mahomedan faith has been appropriately entitled, *The religion of the sword*; and with equal propriety may we so designate the religion of these belligerent friars. The Portuguese writers give an account of one of their missionaries, Fernando Vinagre, who was as prompt in the field of battle as at the baptismal font. This man, though a secular priest, undertook the command of a squadron that was sent to the assistance of the rajah of Tidore, on which occasion he is said to have acted in the twofold capacity of a great commander, and a great apostle, at one time appearing in armour, at another in a surplice; and even occasionally, baptizing the converts of his sword without putting off his armour, but covering it with his ecclesiastical vest. In this crusade he had two\n\n---\n\n3 Geddes History, &c., pp. 24\u201427.\n\nPudet h\u00e6c opprobria nobis\nVel dici potuisse.\n\n4 Called Tadura or Daco, an island in the Indian Ocean, one of the Moluccas.\n\n5 'These a la Dragoon conversions.' Geddes' History, p. 27.", "source": "olmocr", "added": "2025-09-29", "created": "2025-09-29", "metadata": {"Source-File": "tests/gnarly_pdfs/horribleocr.pdf", "olmocr-version": "0.3.4", "pdf-total-pages": 1, "total-input-tokens": 1292, "total-output-tokens": 423, "total-fallback-pages": 0}, "attributes": {"pdf_page_numbers": [[0, 1648, 1]], "primary_language": ["en"], "is_rotation_valid": [true], "rotation_correction": [0], "is_table": [false], "is_diagram": [false]}}
{"id": "57ea23cd75a7cbd8dc5da081aa88755841516a63", "text": "Limited Warranty\n\nThe EZ-KIT Lite evaluation system is warranted against defects in materials and workmanship for a period of one year from the date of purchase from Analog Devices or from an authorized dealer.\n\nDisclaimer\n\nAnalog Devices, Inc. reserves the right to change this product without prior notice. Information furnished by Analog Devices is believed to be accurate and reliable. However, no responsibility is assumed by Analog Devices for its use; nor for any infringement of patents or other rights of third parties, which may result from its use. No license is granted by implication or otherwise under the patents rights of Analog Devices, Inc.\n\nCopyright Information\n\nCopyright 2001, Analog Devices, Inc., ALL RIGHTS RESERVED. This document may not be reproduced in any form without prior, express written consent from Analog Devices, Inc.\n\nTrademark and Service Mark Notice\n\nEZ-KIT Lite, VisualDSP++, VisualDSP++ logo, TigerSHARC, TigerSHARC logo, CROSSCORE, CROSSCORE logo, Blackfin and the Blackfin logo are all trademarks of Analog Devices Inc. EZ-ICE, SHARC and the SHARC logo are registered trademarks of Analog Devices, Inc. All trademarks and logos are property of their respective holders.\n\nMicrosoft and Windows are registered trademarks of Microsoft Corporation.\n\nAdobe and Acrobat are trademarks of Adobe Systems Incorporated.\n\nAll other brand and product names are trademarks or service marks of their respective owners.\nRegulatory Compliance\n\nThe ADSP-21161N EZ-KIT Lite evaluation system has been certified to comply with the essential requirements of the European EMC directive 89/336/EEC (inclusive 93/68/EEC) and therefore carries the \u201cCE\u201d mark.\n\nThe ADSP-21161N EZ-KIT Lite evaluation system had been appended to the Technical Construction File referenced \u2018DSPTOOLS1\u2019 dated December 21, 1997 and was awarded CE Certification by an appointed European Competent Body as listed below.\n\nTechnical Certificate No: Z600ANA1.005\n\nIssued by: Technology International (Europe) Limited\n41 Shrivenham Hundred Business Park\nShrivenham, Swindon, SN6 8TZ, UK\n\nThe EZ-KIT Lite evaluation system contains ESD (electrostatic discharge) sensitive devices. Electrostatic charges readily accumulate on the human body and equipment and can discharge without detection. Permanent damage may occur on devices subjected to high-energy discharges. Proper ESD precautions are recommended to avoid performance degradation or loss of functionality. Store used EZ-KIT Lite boards in the protective shipping package.\n# TABLE OF CONTENTS\n\n| Section                                                                 | Page |\n|------------------------------------------------------------------------|------|\n| TABLE OF CONTENTS                                                      | iv   |\n| LIST OF TABLES                                                         | vi   |\n| LIST OF FIGURES                                                        | vi   |\n| 1 INTRODUCTION                                                          | 1-1  |\n| 1.1 For More Information About Analog Devices Products                 | 1-2  |\n| 1.2 For Technical or Customer Support                                  | 1-3  |\n| 1.3 Purpose of This Manual                                             | 1-3  |\n| 1.4 Intended Audience                                                  | 1-3  |\n| 1.5 Manual Contents                                                    | 1-4  |\n| 1.6 On-line Help                                                       | 1-4  |\n| 2 GETTING STARTED                                                      | 2-1  |\n| 2.1 Overview                                                           | 2-1  |\n| 2.2 Contents of your EZ-KIT Lite Package                               | 2-1  |\n| 2.3 PC Configuration                                                   | 2-2  |\n| 2.4 Installation Tasks                                                 | 2-2  |\n| 2.4.1 Install the VisualDSP++ Software                                 | 2-2  |\n| 2.4.2 Install the VisualDSP++ License                                  | 2-3  |\n| 2.4.3 Install the EZ-KIT Lite Debug Software                           | 2-3  |\n| 2.4.4 Set-up the EZ-KIT Lite Hardware                                  | 2-4  |\n| 2.4.5 Install the EZ-KIT Lite USB Driver                               | 2-5  |\n| 2.4.6 Driver Installation Verification                                 | 2-15 |\n| 2.4.7 Starting VisualDSP++                                             | 2-16 |\n| 3 USING THE EZ-KIT LITE                                                | 3-1  |\n| 3.1 Overview                                                           | 3-1  |\n| 3.2 EZ-KIT Lite License Restrictions                                   | 3-2  |\n| 3.3 Memory Map                                                         | 3-2  |\n| 3.4 Using the SDRAM Interface                                          | 3-3  |\n| 3.5 Using the Flag Pins                                                | 3-4  |\n| 3.6 Using the Interrupt Pins                                           | 3-5  |\n| 3.7 Using the Audio Interface                                          | 3-5  |\n| 3.8 Example Programs                                                   | 3-6  |\n| 3.9 Using the Flash Programmer Utility                                 | 3-6  |\n| 4 EZ-KIT LITE HARDWARE REFERENCE                                       | 4-1  |\n| 4.1 Overview                                                           | 4-1  |\n| 4.2 System Architecture                                                | 4-2  |\n| 4.2.1 External Port                                                    | 4-3  |\n| 4.2.2 Host Processor Interface (HPI)                                   | 4-3  |\n| 4.2.3 SPORT0 and SPORT2 \u2013 Audio Interface                              | 4-3  |\n| 4.2.4 SPI - Audio Interface                                            | 4-3  |\n| 4.2.5 Breadboard Area                                                  | 4-4  |\n| 4.2.6 JTAG Emulation Port                                              | 4-4  |\n| 4.3 Jumper Settings                                                    | 4-4  |\n| 4.3.1 SDRAM Disable (JP1)                                              | 4-5  |\n| 4.3.2 SPDIF Selection Jumper (JP2)                                     | 4-6  |\n| Section | Description | Page |\n|---------|-------------|------|\n| 4.3.3   | MCLK Selection Jumper (JP3) | 4-6  |\n| 4.3.4   | FLAG0 Enable (JP4) | 4-6  |\n| 4.3.5   | FLAG1 Enable (JP5) | 4-6  |\n| 4.3.6   | Sample Frequency Jumper (JP6) | 4-6  |\n| 4.3.7   | ADC2 Input Mode Selection Jumper (JP7 and JP8) | 4-7  |\n| 4.3.8   | MIC Pre-Amp Gain Selection Jumpers (JP9 and JP10) | 4-7  |\n| 4.3.9   | ADC1 Input Selector Jumper (JP11) | 4-7  |\n| 4.3.10  | Processor ID Jumpers (JP19) | 4-8  |\n| 4.3.11  | Boot Mode Select (JP20) | 4-8  |\n| 4.3.12  | Clock Mode Jumpers (JP21) | 4-9  |\n| 4.3.13  | BMS Enable (JP22) | 4-10 |\n| 4.4     | LEDs and Push Buttons | 4-10 |\n| 4.4.1   | Reset LEDs (LED1, LED8) | 4-11 |\n| 4.4.2   | FLAG LEDs (LED2 - LED7) | 4-12 |\n| 4.4.3   | VERF LED (LED9) | 4-12 |\n| 4.4.4   | USB Monitor LED (LED10) | 4-12 |\n| 4.4.5   | Power LED (LED11) | 4-12 |\n| 4.4.6   | Programmable Flag Push Buttons (SW1 \u2013 SW4) | 4-13 |\n| 4.4.7   | Interrupt Push Buttons (SW5 \u2013 SW7) | 4-13 |\n| 4.4.8   | Reset Push Button (SW8) | 4-13 |\n| 4.5     | Connectors | 4-14 |\n| 4.5.1   | USB (P2) | 4-14 |\n| 4.5.2   | Audio (P4 \u2013 P8, P17) | 4-14 |\n| 4.5.3   | External port and Host Processor Interface (P9, and P10) | 4-15 |\n| 4.5.4   | JTAG (P12) | 4-15 |\n| 4.5.5   | Link Ports (P13 and P14) | 4-15 |\n| 4.5.6   | SPORT1 and SPORT3 (P15) | 4-16 |\n| 4.5.7   | Power Connector (P16) | 4-16 |\n| 4.6     | Specifications | 4-16 |\n| 4.6.1   | Power Supply | 4-16 |\n| 4.6.2   | Board Current Measurements | 4-17 |\n| APPENDIX A: BILL OF MATERIALS | A |\n| APPENDIX B: SCHEMATIC | E |\n| INDEX | 1 |\nLIST OF TABLES\n\nTable 1-1: Related DSP Documents ................................................................. 1-5\nTable 1-2: Related VisualDSP++ Documents .................................................. 1-6\nTable 2-1: Minimum PC Configuration ............................................................ 2-2\nTable 3-1: EZ-KIT Lite Evaluation Board Memory Map ................................... 3-3\nTable 3-2: Flag Pin Summary ............................................................................. 3-4\nTable 3-3: Interrupt Pin Summary ....................................................................... 3-5\nTable 4-1: SPDIF Modes ...................................................................................... 4-6\nTable 4-2: MCLK Selection ................................................................................ 4-6\nTable 4-3: Sample Frequencies .......................................................................... 4-7\nTable 4-4: ADC Input Mode ................................................................................ 4-7\nTable 4-5: MIC Pre Amp Gain ........................................................................... 4-7\nTable 4-6: Processor ID Modes ........................................................................... 4-8\nTable 4-7: Boot Mode Select Jumper (JP20) Settings ........................................ 4-9\nTable 4-8: Clock Mode Selections ....................................................................... 4-9\nTable 4-9: FLAG LEDs ....................................................................................... 4-12\nTable 4-10: FLAG Switches ............................................................................... 4-13\nTable 4-11: Interrupt Switches ........................................................................... 4-13\nTable 4-12: Power Connector ............................................................................ 4-17\nTable 4-13: Current Measurement Resistors ...................................................... 4-17\n\nLIST OF FIGURES\n\nFigure 2-1: EZ-KIT Lite Hardware Setup ............................................................ 2-5\nFigure 2-2: Add New Hardware Wizard Dialog Box ........................................... 2-6\nFigure 2-3: Search for the driver ......................................................................... 2-7\nFigure 2-4: Search the CD-ROM ......................................................................... 2-7\nFigure 2-5: The driver is located ......................................................................... 2-8\nFigure 2-6: Search for .sys File Dialog Box ....................................................... 2-8\nFigure 2-7: Open the .sys File ............................................................................ 2-9\nFigure 2-8: Copying Files ................................................................................... 2-9\nFigure 2-9: Finish the Software Installation ....................................................... 2-10\nFigure 2-10: Found New Hardware Wizard ....................................................... 2-11\nFigure 2-11: Search for a Suitable Driver ........................................................... 2-12\nFigure 2-12: Locate Driver Files ......................................................................... 2-13\nFigure 2-13: Driver File Search Results ............................................................. 2-14\nFigure 2-14: Completing Driver Installation Dialog Box ..................................... 2-15\nFigure 2-15: New Session Dialog Box ............................................................... 2-16\nFigure 3-1 Target Options ................................................................................... 3-4\nFigure 4-1: System Architecture ......................................................................... 4-2\nFigure 4-2: Jumper Locations ............................................................................. 4-5\nFigure 4-3: Audio Input Jumper Settings ............................................................ 4-8\nFigure 4-4: LEDs and Push Button Locations ..................................................... 4-11\nFigure 4-5: Connector Locations ......................................................................... 4-14\n1 INTRODUCTION\n\nThank you for purchasing the ADSP-21161N EZ-KIT Lite\u2122 evaluation system. The evaluation board is designed to be used in conjunction with the VisualDSP++\u2122 development environment to test the capabilities of the ADSP-21161N floating-point digital signal processor (DSP). The VisualDSP++ development environment gives you the ability to perform advanced application code development and debug such as:\n\n- Create, compile, assemble, and link application programs written in C++, C and ADSP-2116x assembly\n- Load, run, step-in, step-out, step-over, halt, and set breakpoints in application programs\n- Read and write data and program memory\n- Read and write core and peripheral registers\n- Plot memory\n\nAccess to the ADSP-21161N, from a PC, is achieved through a USB port or an optional JTAG emulator. The USB interface gives unrestricted access to the ADSP-21161N DSP and the evaluation board peripherals. Analog Devices JTAG emulators offer faster communication between the host PC and target hardware. Analog Devices carries a wide range of in-circuit emulation products. To learn more about Analog Devices emulators and DSP development tools, go to http://www.analog.com/dsp/tools/.\n\nExample programs are provided in the ADSP-21161N EZ-KIT Lite, which demonstrate the capabilities of the evaluation board.\n\nNote: The VisualDSP++ license provided with this EZ-KIT Lite evaluation system limits the use of program memory to 5k words.\n\nThe board\u2019s features include:\n\n- **Analog Devices ADSP-21161N DSP**\n  - 100MHz Core Clock Speed\n  - Core Clock Mode Jumper Configurable.\n- **USB Debugging Interface**\n\u2022 **Analog Devices AD1836 96kHz Audio Codec**\n  - Jumper Selectable Line-In or Mic-In 3.5mm Stereo Jack\n  - Line-Out 3.5mm Stereo Jack\n  - 4 RCA Jacks for Audio Input\n  - 8 RCA Jacks for Audio Output\n\n\u2022 **Analog Devices AD1852 192kHz Auxiliary DAC**\n\n\u2022 **Crystal Semiconductor CS8414 96kHz SPDIF Receiver**\n  - Optical and Coaxial Connectors for SPDIF Input\n\n\u2022 **Flash Memory**\n  - 512K x 8\n\n\u2022 **Interface Connectors**\n  - 14-Pin Emulator Connector for JTAG Interface\n  - SPORT1 and SPORT3 Connectors\n  - Link Port 0 and Link Port 1\n  - External Port Connectors (not populated)\n\n\u2022 **General Purpose I/O**\n  - 4 Push Button Flags\n  - 3 Push Button Interrupts\n  - 6 LED Outputs\n\n\u2022 **Analog Devices ADP3338 & ADP3339 Voltage Regulators**\n\n\u2022 **Breadboard area with typical SMT footprints**\n\nThe EZ-KIT Lite board has a flash memory device that can be used to store user specific boot code. By configuring the jumpers for EPROM boot, the board can run as a stand-alone unit, without a PC. The ADSP-21161N EZ-KIT Lite package contains a flash programmer utility, which allows you to program the flash memory. The flash programmer is described in section 3.9.\n\nSPORT0 and SPORT2 are connected to the audio codec, allowing you to create audio signal processing applications. SPORT1 and SPORT3 are connected to off-board connectors to connect to other serial devices.\n\nAdditionally, the EZ-KIT Lite board provides un-installed expansion connector footprints that allow you to connect to the processor\u2019s External Port (EP) and Host Processor Interface (HPI).\n\n1.1 For More Information About Analog Devices Products\n\nAnalog Devices can be accessed on the Internet at [http://www.analog.com](http://www.analog.com). You can directly access the DSP web pages at [http://www.analog.com/dsp](http://www.analog.com/dsp). This page provides access to DSP specific technical information and documentation, product overviews, and product announcements. For specific information about DSP tools, go to [http://www.analog.com/dsp/tools](http://www.analog.com/dsp/tools).\n21161N EZ-KIT LITE\nTo view help on additional ADSP-21161N EZ-KIT Lite features, go to the windows task bar and select Start\\Programs\\VisualDSP\\EZ-KIT Help.\n\nThe documents in the following two tables can be found through on-line help or in the Docs folder of your VisualDSP++ installation.\n\nFor more documentation, please go to http://www.analog.com/dsp/tech_doc\n\nTable 1-1: Related DSP Documents\n\n| Document Name                                      | Description                                                                 |\n|----------------------------------------------------|-----------------------------------------------------------------------------|\n| ADSP-21161N DSP Datasheet                          | General functional description, pinout and timing.                           |\n| ADSP-21161N SHARC DSP Hardware Reference           | Description of internal DSP architecture and all register functions.         |\n| ADSP-21160 DSP Instruction Set Reference           | Description of all allowed DSP assembly instructions.                        |\n| ADSP-21161 Programmer's Quick Reference Manual     | Provides a summary of the ADSP-2116x instruction set, core and IOP registers, memory maps, a DEF21161.H file listing, and common VisualDSP tools commands.\" |\nTable 1-2: Related VisualDSP++ Documents\n\n| Document Name                                                                 | Description                                                                 |\n|------------------------------------------------------------------------------|-----------------------------------------------------------------------------|\n| *VisualDSP++ Users Guide for ADSP-21xx DSPs*                                 | Detailed description of VisualDSP++ features and usage.                     |\n| *VisualDSP++ Preprocessor and Assembler Manual for ADSP-21xx DSPs*           | Description of the assembler function and commands for ADSP-2116x family DSPs|\n| *VisualDSP++ C/C++ Complier and Library Manual for ADSP-21xx DSPs*           | Description of the complier function and commands for ADSP-2116x family DSPs|\n| *VisualDSP++ Linker and Utilities Manual for ADSP-21xx DSPs*                  | Description of the linker function and commands for the ADSP-2116x family DSPs|\n\nIf you plan to use the EZ-KIT Lite board in conjunction with a JTAG emulator, refer to the documentation that accompanies the emulator.\n2 GETTING STARTED\n\n2.1 Overview\nThis chapter provides you with the information you need to begin using ADSP-21161N EZ-KIT Lite evaluation system. Install your software and hardware in the order presented in section 2.4 for correct operation. This chapter has the following sections:\n\n- **Contents of your EZ-KIT Lite Package** (Section 2.2)\n  Provides a list of the components that are shipped with this EZ-KIT Lite evaluation system.\n\n- **PC Configuration** (Section 2.3)\n  Describes the minimum requirement for the PC to work with the EZ-KIT Lite evaluation system.\n\n- **Installation Tasks** (Section 2.4)\n  Describes the step-by-step procedure for setting up the hardware and software.\n\n2.2 Contents of your EZ-KIT Lite Package\nYour ADSP-21161N EZ-KIT Lite evaluation system package contains the following items.\n\n- ADSP-21161N EZ-KIT Lite board\n- VisualDSP++ CD w/ license.\n- ADSP-21161N EZ-KIT Lite CD, containing:\n  - EZ-KIT Lite specific debug software\n  - USB driver files\n  - Example programs\n  - ADSP-21161N EZ-KIT Lite Manual (this document)\n  - Flash programmer utility\n- EZ-KIT Lite Quick Start Guide\n- Installation Quick Reference Card for VisualDSP++\n- Universal 7.5V DC power supply\n- 5 meter USB type A to type B cable\n- Registration card - please fill out and return\n\nIf any item is missing, contact the vendor where you purchased your EZ-KIT Lite or contact Analog Devices, Inc.\nThe EZ-KIT Lite evaluation system contains ESD (electrostatic discharge) sensitive devices. Electrostatic charges readily accumulate on the human body and equipment and can discharge without detection. Permanent damage may occur on devices subjected to high-energy discharges. Proper ESD precautions are recommended to avoid performance degradation or loss of functionality. Store used EZ-KIT Lite boards in the protective shipping package.\n\n2.3 PC Configuration\n\nFor correct operation of the VisualDSP++ software and the EZ-KIT Lite, your computer must have the minimum configuration shown in Table 2-1.\n\nTable 2-1: Minimum PC Configuration\n\n| Windows\u00ae 98, Windows\u00ae 2000 or later |\n|-------------------------------------|\n| Intel (or comparable) 166MHz processor |\n| VGA Monitor and color video card |\n| 2-button mouse |\n| 50MB free on hard drive |\n| 32 MB RAM |\n| Full speed USB port |\n| CD-ROM Drive |\n\n\uf0d8 Note: This EZ-KIT Lite does not run under Windows 95 or Windows NT\n\n2.4 Installation Tasks\n\nThe following tasks are provided for the safe and effective use of the ADSP-21161N EZ-KIT Lite. Follow these instructions in the order presented to ensure correct operation of your software and hardware.\n\n1. Install VisualDSP++ software\n2. Install VisualDSP++ license\n3. Install EZ-KIT Lite debug software\n4. Setup EZ-KIT Lite hardware\n5. Install EZ-KIT Lite USB driver\n6. Verify the USB driver installation\n7. Start VisualDSP++\n\n2.4.1 Install the VisualDSP++ Software\n\nThis EZ-KIT Lite comes with the latest version of VisualDSP++ for the SHARC DSP family. You must install this software before installing the EZ-KIT Lite debug software.\nInsert the VisualDSP++ CD-ROM into the CD-ROM drive. If Auto Run is enabled on your PC, the home screen of the VisualDSP++ install wizard will automatically appear. If not, choose **Run** from the **Start** menu, and enter **D:\\Setup.exe** in the **Open** field, where D is the name of your local CD-ROM drive. Click on the \u201cInstall VisualDSP++\u201d option. This will launch the setup wizard. Follow the on-screen instructions.\n\n### 2.4.2 Install the VisualDSP++ License\n\nBefore the VisualDSP++ software can be used, the license must be installed.\n\nTo install the VisualDSP++ license:\n\n1. Make sure VisualDSP++ has been installed first.\n2. Insert the VisualDSP++ CD-ROM into the CD-ROM drive if it is not already in the drive.\n3. Once the CD-ROM browser is on the screen select the \u201cInstall License\u201d option.\n4. Follow the setup wizard instructions. (Note: You will need the serial number located on the back of the CD-ROM sleeve.)\n\n### 2.4.3 Install the EZ-KIT Lite Debug Software\n\nVisualDSP++ communicates with the EZ-KIT Lite board using the EZ-KIT Lite debug software. This software is supplied on the EZ-KIT Lite CD-ROM.\n\nTo install the EZ-KIT Lite debug software:\n\n1. Make sure VisualDSP++ has been installed first.\n2. Close all Windows applications. The install will not work correctly if any VisualDSP++ applications are running.\n3. Insert the EZ-KIT Lite CD-ROM into the CD-ROM drive. If Auto Run is enabled on your PC, the home screen of the EZ-KIT Lite install wizard will automatically appear. If not, choose **Run** from the **Start** menu, and enter **D:\\Setup.exe** in the **Open** field, where D is the name of your local CD-ROM drive. Click on the \u201cInstall EZ-KIT Lite Software\u201d option. This will launch the setup wizard. Follow this wizard with the on-screen instructions.\n2.4.4 Set-up the EZ-KIT Lite Hardware\n\nThe EZ-KIT Lite Evaluation board contains ESD (electrostatic discharge) sensitive devices. Electrostatic charges readily accumulate on the human body and equipment and can discharge without detection. Permanent damage may occur on devices subjected to high energy discharges. Proper ESD precautions are recommended to avoid performance degradation or loss of functionality. Store used EZ-KIT Lite boards in the protective shipping package.\n\nThe ADSP-21161N EZ-KIT Lite board is designed to run outside your personal computer as a stand-alone unit. You do not have to open your computer case. Use the following steps to connect the EZ-KIT Lite board:\n\n1. Remove the EZ-KIT Lite board from the package. Be careful when handling these boards to avoid the discharge of static electricity, which may damage some components.\n\n2. Figure 2-1 shows the default jumper settings, connector locations and LEDs used in installation. Confirm that your board is set up in the default configuration before continuing.\n3. Plug the provided power supply into P16 on the EZ-KIT Lite board. Visually verify that the green power LED (LED11) is on. Also verify that the two red reset LEDs (LED1 and LED8) go on for a moment and then go off.\n\n4. Connect the USB cable to an available full speed USB Port and to P2 on the ADSP-21161N EZ-KIT Lite board.\n\n5. Now follow the USB driver installation instructions in section 2.4.5.\n\n2.4.5 Install the EZ-KIT Lite USB Driver\n\nThe EZ-KIT Lite evaluation system can be installed on Windows 98 and Windows 2000 and requires one full-speed USB port. Section 2.4.5.1 describes the installation on Windows 98. Section 2.4.5.2 describes the installation on Windows 2000.\n2.4.5.1 Windows 98 USB Driver Installation\n\nBefore using the ADSP-21161N EZ-KIT Lite for the first time, the Windows 98 USB driver must first be installed. This is accomplished as follows:\n\n1. Insert the EZ-KIT Lite CD-ROM into the CD-ROM drive.\n\nThe connection of the device to the USB port will activate the Windows 98 \u201cAdd New Hardware Wizard\u201d as shown in Figure 2-2.\n\n![Add New Hardware Wizard Dialog Box](image)\n\n**Figure 2-2: Add New Hardware Wizard Dialog Box**\n\n2. Click Next.\n3. Select \u201cSearch for the best driver for your device\u201d as shown in Figure 2-3.\n\n![Add New Hardware Wizard](image1)\n\n**Figure 2-3: Search for the driver**\n\n4. Click Next.\n\n5. Place a check in the box next to \u201cCD-ROM drive\u201d as shown in Figure 2-4.\n\n![Add New Hardware Wizard](image2)\n\n**Figure 2-4: Search the CD-ROM**\n6. Click Next.\n\nWindows 98 will locate the WmUSBEz.inf file that is on the CD-ROM as shown in Figure 2-5.\n\n![Add New Hardware Wizard](image)\n\n**Figure 2-5: The driver is located**\n\n7. Click Next.\n\nFigure 2-6 will appear.\n\n![Copying Files...](image)\n\n**Figure 2-6: Search for .sys File Dialog Box**\n\n8. Click the Browse button.\nFigure 2-7 will appear.\n\n9. In Drives select your CD-ROM drive.\n10. Click OK.\n\nFigure 2-8 will appear.\n\n11. Click OK.\nThe driver installation is now complete as shown in Figure 2-9.\n\nFigure 2-9: Finish the Software Installation\n\n12. Click Finish to exit the wizard.\n\nVerify the installation by following the instructions in section 2.4.6.\n2.4.5.2 Windows 2000 USB Driver Installation\n\nBefore using the ADSP-21161N EZ-KIT Lite for the first time, the Windows 2000 driver must first be installed. This is accomplished as follows:\n\n1. Insert the EZ-KIT Lite CD-ROM into the CD-ROM drive.\n\nThe connection of the device to the USB port will activate the Windows 2000 \u201cFound New Hardware Wizard\u201d as shown in Figure 2-10.\n\n![Figure 2-10: Found New Hardware Wizard](image)\n\n2. Click Next.\n3. Select \u201cSearch for a suitable driver for my device\u201d as shown in Figure 2-11.\n\n4. Click Next.\n5. Make sure there is a check in the box next to \u201cCD-ROM drive\u201d as shown in Figure 2-12.\n\n![Figure 2-12: Locate Driver Files](image)\n\n6. Click Next.\nFigure 2-13 appears.\n\nFigure 2-13: Driver File Search Results\n\n7. Click Next.\nWindows 2000 will automatically install the ADSP-21161N EZ-KIT Lite driver. The driver installation is now complete as shown in Figure 2-14.\n\n![Figure 2-14: Completing Driver Installation Dialog Box](image)\n\n8. Click Finish to exit the wizard.\n\nVerify the installation by following the instructions in section 2.4.6.\n\n### 2.4.6 Driver Installation Verification\n\nBefore you use the EZ-KIT Lite evaluation system, verify that the USB driver software is installed properly:\n\n1. Ensure that the USB cable is connected to the evaluation board and the PC.\n2. Press and release the RESET button (SW8) on the evaluation board.\n3. Verify that the red DSP RESET LED (LED8) stays lit for about 15 seconds.\n4. After the DSP RESET LED (LED8) goes out, verify that the yellow USB monitor LED (LED10) is lit. This signifies that the board is communicating properly with the host PC, and is ready to run VisualDSP++.\n2.4.7 Starting VisualDSP++\n\nIn order to start debugging, you must set up a session in VisualDSP++.\n\n1. Hold down the Control (CTRL) key.\n2. Select the Start button on the Windows taskbar, and then choose Programs, VisualDSP, VisualDSP++.\n\nThe Session List dialog box appears if you already have existing sessions. Skip to step 4 if this is the first time running VisualDSP++.\n\n3. Click on New Session.\n4. The New Selection dialog will appear as shown in Figure 2-15.\n\n![New Session Dialog Box](image)\n\n**Figure 2-15: New Session Dialog Box**\n\n5. In Debug Target, choose \u201cEZ-KIT Lite (ADSP-21161N)\u201d.\n6. Type a new target name in Session Name or accept the default name.\n7. Click OK to return to the Session List. Highlight the new session and click Activate.\n3 USING THE EZ-KIT LITE\n\n3.1 Overview\n\nThis chapter provides specific information to assist you with developing programs for the ADSP-21161N EZ-KIT Lite board. This information appears in the following sections:\n\n- **EZ-KIT Lite License Restrictions** (Section 3.2)\n  Describes the restrictions of the EZ-KIT Lite license.\n\n- **Memory Map** (Section 3.3)\n  Defines the memory map to assist in developing programs for the EZ-KIT Lite evaluation system.\n\n- **Using the SDRAM Interface** (Section 3.4)\n  Defines the registers necessary for configuring external memory.\n\n- **Using the Flag Pins** (Section 3.5)\n  Describes how to use the programmable flag pins to assist in developing programs for the EZ-KIT Lite evaluation system.\n\n- **Using the Interrupt Pins** (Section 3.6)\n  Describes how to use the interrupt pins to assist in developing programs for the EZ-KIT Lite evaluation system.\n\n- **Using the Audio Interface** (Section 3.7)\n  Describes how to use the audio interface to assist in developing programs for the EZ-KIT Lite evaluation system.\n\n- **Example Programs** (Section 3.8)\n  Provides information about the example programs included in the ADSP-21161N EZ-KIT Lite evaluation system.\n\n- **Using the Flash Programmer Utility** (Section 3.9)\n  Provides information on the flash programmer utility included with VisualDSP++.\n\nFor more detailed information about programming the ADSP-21161N, see the documents referred to in section 1.6.\n3.2 EZ-KIT Lite License Restrictions\n\nThe license that is shipped with the EZ-KIT Lite imposes the following restrictions:\n\n- Program Memory (PM) space is limited to 5K words (1/4 of the ADSP-21161N PM space)\n- No connections to Simulator or Emulator sessions are allowed.\n- Only one EZ-KIT Lite can be connected to the host PC and debugged at a time\n\n3.3 Memory Map\n\nThe ADSP-21161N has 1Mbit of internal SRAM that can be used for program storage or data storage. The configuration of internal SRAM is detailed in the ADSP-21161N DSP Hardware Reference.\n\nThe ADSP-21161N EZ-KIT Lite board contains 512K x 8-bits of external flash memory. This memory is connected to the DSP\u2019s ~MS1 and ~BMS memory select pins. The flash memory can be accessed in either the boot memory space or the external memory space. The external memory interface is also connected to 1M x 48-bit SDRAM memory. This memory is connected to the ~MS0 pin.\n### Table 3-1: EZ-KIT Lite Evaluation Board Memory Map\n\n| Start Address | End Address | Content |\n|---------------|-------------|---------|\n| 0x0000 0000   | 0x0001 FFFF | IOP Registers (Internal) |\n| 0x0002 0000   | 0x0002 1FFF | Block 0 Long Word Addressing |\n| 0x0002 8000   | 0x0002 9FFF | Block 1 Long Word Addressing |\n| 0x0004 0000   | 0x0004 3FFF | Block 0 Normal Word Addressing |\n| 0x0005 0000   | 0x0005 3FFF | Block 1 Normal Word Addressing |\n| 0x0008 0000   | 0x0008 7FFF | Block 0 Short Word Addressing |\n| 0x000A 0000   | 0x000A 7FFF | Block 1 Short Word Addressing |\n| 0x0010 0000   | 0x001F FFFF | Multi-processor Memory Space |\n| 0x0020 0000   | 0x002F FFFF | External Memory Space Bank 0 (SDRAM) |\n| 0x0400 0000   | 0x047F FFFF | External Memory Space Bank 1 (FLASH) |\n| 0x0800 0000   | 0xBFF FFFF  | External Memory Space Bank 2 |\n| 0x0C00 0000   | 0xFFF FFFF  | External Memory Space Bank 3 |\n\n### 3.4 Using the SDRAM Interface\n\nIn order to use the SDRAM memory the two SDRAM control registers need to be set to the following values: SDRDIV = 0x1000 and SDCTL = 0x02014231\n\nThe SDCTL register configures the SDRAM controller for the following settings: (1/2 CCLK, no SDRAM buffering option, 2 SDRAM banks, SDRAM mapped to bank 0 only, no self-refresh, page size 256 words, SDRAM powerup mode is prechrg, 8 CRB refs, and then mode reg set cmd, tRCD = 2 cycles, tRP=2 cycles, tRAS=3 cycles, SDCL=1 cycle, and SDCLK0, SDCLK1, RAS, CAS and SDCLKE activated)\n\nThe SDRAM registers are configured automatically through the debugger. Checking the appropriate box as shown in Figure 3-1 disable this setting and allows manual configuration.\n3.5 Using the Flag Pins\n\nThe ADSP-21161N has 12 asynchronous Flags I/O pins. 10 of these pins (FLAG0-9) are available to let you interact with the running program.\n\nAfter the DSP is reset, the flags are configured as inputs. The directions of the flags are configured though the MODE2 register and are set and read though the FLAGS register. For more information on configuring the flag pins, see the ADSP-21161N DSP Hardware Reference. Flags and their uses are described in Table 3-2.\n\nTable 3-2: Flag Pin Summary\n\n| Flag     | Connected to | Use                                                                 |\n|----------|--------------|----------------------------------------------------------------------|\n| FLAG0    | SW1          | FLAG0-3 are connected to the push buttons to supply feedback for program execution. For instance, you can write your code to trigger a flag when a routine is complete. |\n| FLAG1    | SW2          |                                                                      |\n| FLAG2    | SW3          |                                                                      |\n| FLAG3    | SW4          |                                                                      |\n| FLAG4-   | LED2-LED7    | FLAG4-9 are connected to LEDs on the EZ-KIT Lite board and are for user output. |\n| FLAG9    |              |                                                                      |\n| FLAG10 & 11 | Not Connected | Not Available                                                        |\n\n\uf0d8 Note: FLAG0 \u2013 FLAG3 are available on connector P10.\n3.6 Using the Interrupt Pins\n\nThe ADSP-21161N has 3 interrupt pins (IRQ0-2) that let you interact with the running program. Each of the three external interrupts are directly accessible through the push button switches SW5 - SW7 on the EZ-KIT Lite board. For more information on configuring the interrupt pins, see the *ADSP-21161N DSP Hardware Reference*. Interrupts and their uses are described in Table 3-3.\n\nTable 3-3: Interrupt Pin Summary\n\n| Interrupt | Connected to | Use |\n|-----------|--------------|-----|\n| IRQ0      | SW5          | IRQ0-2 are connected to the push buttons and supply feedback for program execution. For instance, you can write your code to trigger a flag when a routine is complete. |\n| IRQ1      | SW6          |     |\n| IRQ2      | SW7          |     |\n\n\uf0d8 Note: IRQ0 \u2013 IRQ3 are available on connector P10.\n\n3.7 Using the Audio Interface\n\nThe audio interface on the EZ-KIT Lite board allows you to interface to the codec and digital receiver through various connectors. See section 4.5.2 for more information about the connectors. The audio interface consists of three main ICs, an AD1836, AD1852 and a CS8414.\n\nThe AD1836 multi-channel codec features six digital-to-analog converters (DACs) and four analog-to-digital converters (ADCs), support multiple digital stereo channels with 24-bit conversion resolution and a 96 kHz sample rate. The AD1836 features a 108 dB dynamic range for each of its six DACs, and a 104 dB dynamic range for its four ADCs.\n\nThe AD1852 is a complete 18/20/24-bit single-chip stereo digital audio playback system. It is comprised of a multibit sigma-delta modulator, digital interpolation filters, and analog output drive circuitry. Other features include an on-chip stereo attenuator and mute, programmed through an SPI-compatible serial control port. The AD1852 is fully compatible with all known DVD formats including 192kHz and 96kHz sample frequencies and 24-bits. It also is backwards compatible by supporting 50/15\u00b5s digital de-emphasis intended for \"redbook\" Compact Discs, as well as de-emphasis at 32kHz and 48kHz sample rate.\n\nThe CS8414 is a monolithic CMOS device that receives and decodes audio data up to 96kHz according to the AES/EBU, IEC958, S/PDIF, and EIAJ CP340/1201 interface standards. The CS8414 receives data from a transmission line, recovers the clock and synchronization signals, and de-multiplexes the audio and digital data. The CS8414 is setup to operate in I\u00b2S compatible mode.\nThe Microphone and Line-In jacks connect to the left and right ADC1 channel on the AD1836, depending on the setting of jumpers. See sections 4.3.9 and 4.3.8 for more information about configuring the jumpers. Two RCA jacks connect to ADC2 on the AD1836. This input is configured though the input mode selection jumpers see section 4.3.7 for more information.\n\nThe Line-Out jacks connect to the left and right DAC outputs of the AD1836 and AD1852.\n\nThe CS8414 has an error flag (VERF) that is used to indicate that the audio output may not be valid. This signal is connected to an LED (LED9) on the board. This signal may also be used by interpolation filters to provide error correction.\n\n3.8 Example Programs\n\nExample programs are provided with the ADSP-21161N EZ-KIT Lite to demonstrate various capabilities of the evaluation board. These programs are installed with the EZ-KIT Lite software and can be found in \\...\\VisualDSP\\211xx\\EZ-KITs\\ADSP-21161N\\Examples. Please refer to the example program readme files for more information.\n\n3.9 Using the Flash Programmer Utility\n\nThe ADSP-21161N EZ-KIT Lite evaluation system includes a flash programmer utility. The utility allows you to program the flash on the EZ-KIT Lite. This utility must be installed separately from the debug software. To install the utility, insert the EZ-KIT Lite CD-ROM and follow the steps in the installation wizard.\n\nFor more information on the flash programmer utility, from the start menu choose Programs\\VisualDSP\\Flash Programmer Help.\n4 EZ-KIT LITE HARDWARE REFERENCE\n\n4.1 Overview\n\nThis chapter describes the hardware design of the ADSP-21161N EZ-KIT Lite board. The following topics are covered:\n\n- **System Architecture** (Section 4.2)\n  Describes the configuration of the DSP as well as a description of how all of the components on the board interface with the DSP.\n\n- **Jumper Settings** (Section 4.3)\n  Shows the location and describes the function of all the configuration jumpers.\n\n- **LEDs and Push Buttons** (Section 4.4)\n  Shows the location and describes the function of all the LEDs and push buttons.\n\n- **Connectors** (Section 4.5)\n  Shows the location and gives the part number for all of the connectors on the board. Also, the manufacturer and part number information is given for the mating part.\n\n- **Specifications** (Section 4.6)\n  Gives the requirements for powering the board as well as the mechanical locations of some components of the board.\n4.2 System Architecture\n\nThe EZ-KIT Lite has been designed to demonstrate the capabilities of the ADSP-21161N DSP. This section will describe the DSP\u2019s configuration on the EZ-KIT Lite board.\n\n![Figure 4-1: System Architecture](image)\n\nThe DSP core voltage is 1.8V and the external interface operates at 3.3V.\n\nA 12.5MHz through-hole oscillator supplies the input clock to the DSP. Footprints are provided on the board for a surface-mount oscillator and a through-hole crystal for alternate user installed clocks. The speed at which the core operates is determined by the location of the Clock Mode jumpers (JP21). (See section 4.3.12.) By default, the DSP core runs at 100MHz.\n4.2.1 External Port\n\nThe external port is connected to a 512K x 8-bit flash memory. This memory is connected to the boot memory select (~BMS) pin and the memory select 1 (~MS1) pin, allowing the flash memory to be used to boot the DSP as well as store information during normal operation. Refer to section 3.3 for information about the location of the flash memory in the DSP\u2019s memory map.\n\nThe external memory interface is also connected to 1M x 48-bit SDRAM memory. This memory is connected to the memory select 0 (~MS0) pin. Refer to section 4.3.1 for information about configuring the width of the SDRAM. Refer to section 3.3 for information about the location of the flash memory in the DSP\u2019s memory map.\n\nSome of the address, data, and control signals are available externally via two off-board connectors. The pinout of the EP connectors (P9 and P10) can be found in APPENDIX B: SCHEMATIC.\n\n4.2.2 Host Processor Interface (HPI)\n\nThe Host Port Interface (HPI) signals are brought to an unpopulated off board connector P9. This allows the HPI to interface to a user application. The pinout of the host port connector (P9) can be found in APPENDIX B: SCHEMATIC.\n\n4.2.3 SPORT0 and SPORT2 \u2013 Audio Interface\n\nSPORT0 and SPORT2 are connected to the AD1836 codec (U10). A 3.5mm stereo jack and four RCA mono jacks allow audio to be input. A 3.5mm stereo jack and eight RCA mono jacks allow audio to be output.\n\nThe codec contains two input channels. One channel is connected to a 3.5mm stereo jack and two RCA jacks. The 3.5mm stereo jack can be connected to a microphone. The two RCA jacks can be connected to a line out from an audio device. You can supply an audio input to the codec microphone input channel (MIC1) or to the LINE_IN input channel. The jumper settings of JP1 determine the codec channel driven by the input jack (P3).\n\n4.2.4 SPI - Audio Interface\n\nThe SPI is connected to the AD1836 and AD1852. This is used for writing and reading from control registers on the devices.\n4.2.5 Breadboard Area\n\nUse the breadboard area to add external circuitry.\n\n- All board voltages and grounds\n- Package Footprints\n  - 1x SOIC16\n  - 1x SOIC20\n  - 4x SOT23-6\n  - 1x PSOP44\n  - 2x SOT23\n  - 27x 0805\n\n\u27a2 Warning: Any circuitry added to the breadboard area is not supported.\n\n4.2.6 JTAG Emulation Port\n\nThe JTAG emulation port allows an emulator to access the DSP\u2019s internal and external memory, as well as the special function registers through a 14-pin header. See section 4.5.5 for more information about the JTAG connector. To learn more about available emulators, contact Analog Devices (See section 1.1).\n\n4.3 Jumper Settings\n\nThis section describes the function of all the jumpers. The following figure shows the location of all the jumpers.\n4.3.1 SDRAM Disable (JP1)\n\nJP1 is used to enable or disable the third SDRAM device. When this jumper is installed, the ADSP-21161N can access the SDRAM as 48-bit wide external memory.\n\nThe upper 16 bits of data are multiplexed with the Link Ports and the external data bus. Therefore when the jumper is installed the Link Ports are not available. To use the Link Ports this jumper must be removed.\n4.3.2 SPDIF Selection Jumper (JP2)\n\nJP2 is used to select the SPDIF input to the CS8414 Digital Audio Receiver. When the jumper is configured for an optical connection, the TOSLINK optical input connector (P4) should be used. When the jumper is configured for a coax connection, the RCA input connector (P5) should be used.\n\nTable 4-1: SPDIF Modes\n\n| Jumper Location | Mode                  |\n|-----------------|-----------------------|\n| 1 & 2           | Optical (factory default) |\n| 2 & 3           | Coax                  |\n\n4.3.3 MCLK Selection Jumper (JP3)\n\nJP3 is used to select the MCLK source for the AD1836 and AD1852.\n\nTable 4-2: MCLK Selection\n\n| Jumper Location | MCLK Source                          |\n|-----------------|--------------------------------------|\n| 1 & 2           | Audio Oscillator (12.288 MHz) (factory default) |\n| 2 & 3           | Derived clock from SPDIF Stream      |\n\n4.3.4 FLAG0 Enable (JP4)\n\nIn standard configuration, FLAG1 is connected to the AD1836 and used as a select for the SPI port. This jumper should be removed to use the push button switch or the signal on the expansion connector (P10). Once this jumper is removed, the SPI can no longer communicate with the AD1836.\n\n4.3.5 FLAG1 Enable (JP5)\n\nIn standard configuration, FLAG1 is connected to the AD1852 and used as a select for the SPI port. This jumper should be removed to use the push button switch or the signal on the expansion connector (P10). Once this jumper is removed, the SPI can no longer communicate with the AD1852.\n\n4.3.6 Sample Frequency Jumper (JP6)\n\nJP6 is used to select the sample frequency for the AD1852. Table 4-3 shows the valid modes that may be used.\nTable 4-3: Sample Frequencies\n\n| Jumper Location | Sample Frequency                      |\n|-----------------|---------------------------------------|\n| None installed  | Not Allowed                           |\n| 3 & 4           | 192 kHz (2x Interpolator)             |\n| 1 & 2           | 96 kHz (4x Interpolator)              |\n| 1 & 2, 3 & 4    | 48 kHz (8x Interpolator) (factory default) |\n\n4.3.7 ADC2 Input Mode Selection Jumper (JP7 and JP8)\n\nJP7 and JP8 control the input mode to ADC2 on the AD1836. In high-performance mode, the signal is routed straight in to the ADC. In PGA mode, the signal goes through a multiplexer and a programmable gain amplifier inside of the codec.\n\nTable 4-4: ADC Input Mode\n\n| Jumper Location | Input Mode          |\n|-----------------|---------------------|\n| 3 & 5, 4 & 6    | PGA (factory default) |\n| 1 & 3, 2 & 4    | High Performance    |\n\n4.3.8 MIC Pre-Amp Gain Selection Jumpers (JP9 and JP10)\n\nJP9 and JP10 are used to select the pre-amp gain for the microphone circuit. The gain for the left and right channel should be configured the same.\n\nTable 4-5: MIC Pre Amp Gain\n\n| Jumper Position | Gain            |\n|-----------------|-----------------|\n| Not Installed   | 0dB             |\n| 1 & 2           | 20dB            |\n| 2 & 3           | 40dB (factory default) |\n\n4.3.9 ADC1 Input Selector Jumper (JP11)\n\nJP11 is used to select the input source for ADC2. If the input source for ADC2 is Line-In then the RCA connector P6 should be used. If the input source for ADC2 is a microphone then the mini stereo plug P7 should be used. If a microphone is used, the gain of the circuit may be increased as described in the section 4.3.8.\nWhen the JP11 jumpers are between pins 1 and 3 and between pins 2 and 4, the connection is to P7. When the jumpers are between pins 3 and 5 and between pins 4 and 6, P3 the connection is to P6. The jumper settings are illustrated below. (The words MIC and LINE are on the board to give a reference)\n\n| Microphone Input | Stereo LINE_IN (DEFAULT) |\n|------------------|--------------------------|\n| ![MIC](image1)   | ![MIC](image2)           |\n| ![LINE](image3)  | ![LINE](image4)          |\n\n**Figure 4-3: Audio Input Jumper Settings**\n\n### 4.3.10 Processor ID Jumpers (JP19)\n\nJP19 is used to select different a different processor ID for the DSP. During typical operation of the EZ-KIT Lite board, there is only a single DSP in the system. The jumper should be set to the single processor setting. In the case where a second processor is attached to the board though the link port these jumpers should be changed to configure one board for processor 1 and the other board for processor 2. System configuration options are shown in Table 4-6.\n\n#### Table 4-6: Processor ID Modes\n\n| Jumper Position | Description            |\n|-----------------|------------------------|\n| 1 & 2, 3 & 4, 5 & 6 | Single Processor (Default) |\n| 3 & 4, 5 & 6     | Processor 1            |\n| 1 & 2, 5 & 6     | Processor 2            |\n| Other            | INVALID                |\n\n### 4.3.11 Boot Mode Select (JP20)\n\nJP20 determines how the DSP will boot. Table 4-7 shows the jumper setting for the boot modes.\nTable 4-7: Boot Mode Select Jumper (JP20) Settings\n\n| EBOOT Pins 1 & 2 | LBOOT Pins 3 & 4 | BMS Pins 5 & 6 | Boot Mode                  |\n|------------------|------------------|----------------|----------------------------|\n| Not Installed    | Installed        | Not Installed (Output) | EPROM BOOT(DEFAULT)       |\n| Installed        | Installed        | Not Installed (Input)   | Host Processor Boot        |\n| Installed        | Not Installed    | Installed (Input)       | Serial Boot via SPI        |\n| Installed        | Not Installed    | Not Installed (Input)   | Link Port Boot             |\n| Installed        | Installed        | Installed (Input)       | No Boot                    |\n| Not Installed    | Not Installed    | Installed (Input)       | Reserved                   |\n\n4.3.12 Clock Mode Jumpers (JP21)\n\nJP21 controls the speed for the core and external port of the ADSP-21161N. The frequency supplied to CLKIN of the DSP may be changed by removing the 12.5 MHz oscillator (U24) that is shipped with the board and replacing it with a different oscillator or crystal (Y2). A clock mode and frequency should be selected so that the min and max specs of the ADSP-21161N are not exceeded. For more information on clock modes, see the ADSP-21161N DSP Hardware Reference. Table 4-8 shows the jumper setting for the clock modes.\n\nTable 4-8: Clock Mode Selections\n\n| CLKDBL Pins 1 & 2 | CLK_CFG1 Pins 3 & 4 | CLK_CFG0 Pins 5 & 6 | Core Clock Ratio | EP Clock Ratio |\n|-------------------|---------------------|---------------------|------------------|----------------|\n| Not Installed     | Installed           | Installed           | 2:1              | 1x             |\n| Not Installed     | Installed           | Not Installed       | 3:1              | 1x             |\n| Not Installed     | Not Installed       | Installed           | 4:1              | 1x             |\n| Installed         | Installed           | Installed           | 4:1              | 2x             |\n| Installed         | Installed           | Not Installed       | 6:1              | 2x             |\n| Installed         | Not Installed       | Installed           | **8:1**          | **2x (Default)** |\n4.3.13 BMS Enable (JP22)\n\nJP22 is used to control the routing of the Boot Memory Select (BMS) signal. When the jumper is installed the BMS signal is routed to the FLASH memory interface and can be used for reading, writing and booting. The jumper should be installed when using EPROM boot mode. This jumper should be removed when using the serial boot or no boot mode. If the jumper was left on in these modes the flash would always be selected because the BMS signal is grounded in these modes.\n\n4.4 LEDs and Push Buttons\n\nThis section describes the function of all the LEDs and push buttons. Figure 4-4 shows the location of all the LEDs and push buttons.\n4.4.1 Reset LEDs (LED1, LED8)\n\nWhen LED1 is lit, it indicates that the master reset of all the major ICs is active.\n\nWhen LED8 is lit, the ADSP-21161N (U1) is being reset. The USB interface resets the ADSP-21161N during USB communication initialization.\n4.4.2 FLAG LEDs (LED2 - LED7)\n\nThe FLAG LEDs connect to the DSP\u2019s flag pins (FLAG4-FLAG9). These LEDs are active HIGH and are lit by an output of \u201c1\u201d from the DSP. Refer to section 3.4 for more information about the use of the programmable flags when programming the DSP. Table 4-9 shows the FLAG signal and the corresponding LED.\n\nTable 4-9: FLAG LEDs\n\n| FLAG Pin | LED Reference Designator |\n|----------|--------------------------|\n| FLAG4    | LED7                     |\n| FLAG5    | LED6                     |\n| FLAG6    | LED5                     |\n| FLAG7    | LED4                     |\n| FLAG8    | LED3                     |\n| FLAG9    | LED2                     |\n\n4.4.3 VERF LED (LED9)\n\nThe VERF LED indicates that there is a possible error on the audio stream of the CS8414 digital receiver. One cause for this is that there are no digital audio cables connected to the optical or coaxial SPDIF connectors.\n\n4.4.4 USB Monitor LED (LED10)\n\nThe USB Monitor LED indicates that USB communication has been initialized successfully and you may now connect to the DSP using VisualDSP++. If the LED is not lit, try resetting the board, and/or reinstalling the USB driver (see section 2.4.5).\n\n4.4.5 Power LED (LED11)\n\nLED11 is a green LED that indicates that power is being properly supplied to the board.\n4.4.6 Programmable Flag Push Buttons (SW1 \u2013 SW4)\n\nFour push buttons are provided for general-purpose user input. SW1 - 4 connect to the DSP\u2019s programmable flag pins. The push buttons are active high and when pressed send a high (1) to the DSP. Refer to section 3.4 for more information about the use of the programmable flags when programming the DSP. Table 4-10 shows the FLAG signal and the corresponding switch.\n\nTable 4-10: FLAG Switches\n\n| Flag Pin | Push Button Reference Designator |\n|----------|----------------------------------|\n| FLAG0    | SW1                              |\n| FLAG1    | SW2                              |\n| FLAG2    | SW3                              |\n| FLAG3    | SW4                              |\n\n4.4.7 Interrupt Push Buttons (SW5 \u2013 SW7)\n\nThree push buttons are provided for general-purpose user input. SW5 - 7 connect to the DSP\u2019s programmable flag pins. The push buttons are active high and when pressed send a high (1) to the DSP. Refer to section 3.4 for more information about the use of the programmable flags when programming the DSP. Table 4-11 shows the interrupt signal and the corresponding switch.\n\nTable 4-11: Interrupt Switches\n\n| Flag Pin | Push Button Reference Designator |\n|----------|----------------------------------|\n| IRQ0     | SW5                              |\n| IRQ1     | SW6                              |\n| IRQ2     | SW7                              |\n\n4.4.8 Reset Push Button (SW8)\n\nThe RESET push button resets all of the IC\u2019s on the board. During reset, the USB interface is automatically reinitialized.\n\n\u27a2 Warning: Pressing the RESET push button (SW8) while VisualDSP++ is running disrupts communication and causes errors in the current debug session. VisualDSP++ must be closed and re-opened.\n4.5 Connectors\n\nThis section describes the function of the connectors and gives information about mating connectors. The following figure shows the locations of the connectors.\n\n![Connector Locations](image)\n\n**Figure 4-5: Connector Locations**\n\n### 4.5.1 USB (P2)\n\nThe USB connector is a standard Type B USB receptacle.\n\n| Part Description          | Manufacturer | Part Number |\n|---------------------------|--------------|-------------|\n| Type B USB receptacle     | Mill-Max     | 897-30-004-90-000 |\n|                           | Digi-Key     | ED90003-ND  |\n\n**Mating Connector**\n\n| USB cable (provided with kit) | Assmann | AK672-5 |\n|-------------------------------|---------|---------|\n|                               | Digi-Key| AK672-5ND |\n\n### 4.5.2 Audio (P4 \u2013 P8, P17)\n\nThere are 2 3.5mm Stereo audio jacks, 13 RCA jacks and 1 optical connector.\n| Part Description                                      | Manufacturer   | Part Number |\n|------------------------------------------------------|----------------|-------------|\n| 3.5mm stereo jack (P7 & P16)                         | Shogyo         | SJ-0359AM-5 |\n| RCA Jacks (P6)                                       | SWITCHCRAFT    | PJRAS2X2S01 |\n| RCA Jacks (P8)                                       | SWITCHCRAFT    | PJRAS4X2U01 |\n| TORX (P4)                                            | TOSHIBA        | TORX173     |\n| Coaxial (P5)                                         | SWITCHCRAFT    | PJRAN1X1U01 |\n\n**Mating Connector**\n\n| Part Description                                      | Manufacturer   | Part Number |\n|------------------------------------------------------|----------------|-------------|\n| 3.5mm stereo plug to 3.5mm stereo cable (P7 & P16)   | Radio Shack    | L12-2397A   |\n| Two channel RCA interconnect cable (P6 & P8)         | Monster Cable  | BI100-1M    |\n| Digital Fiber-Optic Cable (P4)                       | Monster Cable  | ILS100-1M   |\n| Digital Coaxial Cable (P5)                           | Monster Cable  | IDL100-1M   |\n\n### 4.5.3 External port and Host Processor Interface (P9, and P10)\n\nTwo MICTOR board-to-board connectors provide all of the DSP\u2019s External Port signals. Contact AMP for information about mating connectors.\n\n| Part Description | Manufacturer | Part Number |\n|------------------|--------------|-------------|\n| 38 Position MICTOR | AMP          | 2-767004-2  |\n\n### 4.5.4 JTAG (P12)\n\nThe JTAG header is the connecting point for a JTAG in-circuit emulator pod. **Note:** Pin 3 is missing to provide keying. Pin 3 in the mating connector should have a plug.\n\nWhen an emulator is connected to the JTAG header, the USB debug interface is disabled.\n\n> **WARNING:** When using an emulator with the EZ-KIT Lite board, follow the connection instructions provided with the emulator.\n\n### 4.5.5 Link Ports (P13 and P14)\n\nEach link port is connected to a 26-pin connector. Refer to EE-106 for more information about the link port connectors.\n### 4.5.6 SPORT1 and SPORT3 (P15)\n\nSPORT1 and SPORT3 are connected to a 20-pin connector.\n\n| Part Description                  | Manufacturer | Part Number |\n|-----------------------------------|--------------|-------------|\n| 20 position AMPMODU system        | AMP          | 104069-1    |\n| 50 receptacle                     |              |             |\n\n**Mating Connector**\n\n| Part Description                  | Manufacturer | Part Number |\n|-----------------------------------|--------------|-------------|\n| 20 position AMPMODU system        | AMP          | 2-487937-0  |\n| 20 connector                      |              |             |\n| 20 position AMPMODU system        | AMP          | 2-487938-0  |\n| 20 connector (w/o lock)           |              |             |\n| Flexible film contacts (20 per   | AMP          | 487547-1    |\n| connector)                        |              |             |\n\n### 4.5.7 Power Connector (P16)\n\nThe power connector provides all of the power necessary to operate the EZ-KIT Lite board.\n\n| Part Description                  | Manufacturer | Part Number |\n|-----------------------------------|--------------|-------------|\n| 2.5mm Power Jack                  | Switchcraft  | RAPC712     |\n|                                   | Digi-key     | SC1152-ND   |\n\n**Mating Power Supply (shipped with EZ-KIT Lite)**\n\n| Part Description                  | Manufacturer | Part Number |\n|-----------------------------------|--------------|-------------|\n| 7.5v Power Supply                 | GlobTek      | TR9CC2000LCP-Y |\n\n### 4.6 Specifications\n\nThis section provides the requirements for powering the board.\n\n#### 4.6.1 Power Supply\n\nThe power connector supplies DC power to the EZ-KIT Lite board. Table 4-12 shows the power connector pinout.\nTable 4-12: Power Connector\n\n| Terminal   | Connection     |\n|------------|----------------|\n| Center pin | +7.5 VDC@2amps |\n| Outer Ring | GND            |\n\n4.6.2 Board Current Measurements\n\nThe ADSP-21161N EZ-KIT Lite board provides two zero-ohm resistors that may be removed to measure current draw. Table 4-13 shows the resistor number, the voltage plane, and a description of the components on the plane.\n\nTable 4-13: Current Measurement Resistors\n\n| Resistor | Voltage Plane | Description          |\n|----------|---------------|----------------------|\n| R168     | VDDINT        | Core Voltage of the DSP |\n| R169     | VDDEXT        | I/O Voltage of the DSP |\n## APPENDIX A: BILL OF MATERIALS\n\n| Item | Qty | Description                        | Reference Designator | Manufacturer     | Part Number          |\n|------|-----|------------------------------------|----------------------|------------------|----------------------|\n| 1    | 1   | FLASH-512K-X-8                     | U5                   | ST MICRO         | M29W040B120K6        |\n| 2    | 2   | HEX-INVER-SCHMITT-TRIGGER          | U21-22               | PHILIPS          | 74LVC14AD            |\n| 3    | 3   | 1MX16-SDRAM-143MHZ                 | U2-4                 | MICRON           | MT48LC1M16A1TG-7S    |\n| 4    | 1   | 96KHZ-DIGITAL-AUDIO-RECVR          | U8                   | CIRRUS LOGIC     | CS8414-CS            |\n| 5    | 1   | USB-TX/RX MICROCONTROLLER          | U6                   | CYPRESS          | CY7C64603-128NC03-A  |\n| 6    | 1   | NPN TRANSISTOR 1A                  | Q2                   | FAIRCHILD        | MMBT4124             |\n| 7    | 1   | NPN TRANSISTOR 200MA               | Q1                   | FAIRCHILD        | MMBT4401             |\n| 8    | 1   | CRYSTAL OSCILLATOR                 | Y1                   | DIGIKEY          | SE2507CT-ND          |\n| 9    | 2   | NAND GATE                          | U9,U27               | PHILIPS          | 74LVC00AD            |\n| 10   | 1   | 128 BIT SERIAL EEPROM              | U7                   | MICROCHIP        | 24LC00-SN            |\n| 11   | 1   | ADJ 200MA REGULATOR                | VR4                  | ANALOG DEVICES   | ADP3331ART           |\n| 12   | 1   | 128K X 8 SRAM                      | U30                  | CYPRESS          | CY7C1019V33-15VC     |\n| 13   | 1   | DUAL AMP 250MA                     | U29                  | ANALOG DEVICES   | AD8532AR             |\n| 14   | 1   | OSCILLATOR                         | U25                  | DIGI01           | SG-8002DC-PCC-ND     |\n|      |     |                                    |                      |                  | 12.288MH             |\n| 15   | 2   | SINGLE-2 INPUT-NOR                 | U34,U37              | TI               | SN74AHC1G02DBVR      |\n| 16   | 1   | 8-BIT-PARALLEL-SERIAL              | U33                  | TI               | SN74LV164AD          |\n| 17   | 1   | 64-BYTE-FIFO                       | U32                  | CYPRESS          | CY7C4201V-15AC       |\n| 18   | 1   | 12.5 MHz OSC                       | U24                  | DIGI-KEY         | SG-8002DC-PCC-ND     |\n| 19   | 2   | 1000 PF CAP                        | C85-86               | AVX              | 12065A102JAT2A       |\n| 20   | 8   | 2200 PF CAP                        | C40,C46,C52,C58,C64,C70,C76,C82 | AVX | 12065A222JAT2A |\n| 21   | 1   | VOLTAGE-SUPERVISOR                 | U26                  | ANALOG           | ADM708SAR            |\n| 22   | 1   | MULTIBIT-SIGMA-DELTA-DAC           | U11                  | ADI              | AD1852JRS            |\n| 23   | 1   | MULTI-CHANNEL-96KHZ-CODEC          | U10                  | ADI              | AD1836AS             |\n| 24   | 1   | 1MM SPACING                        | U1                   | ADI              | ADSP-21161N-100      |\n| 25   | 1   | 3.3V-1.0AMP REGULATOR              | VR2                  | ANALOG           | ADP3338ARM-3.3       |\n| 26   | 2   | 5V-1.5A REGULATOR                  | VR1,VR5              | ANALOG           | ADP3339AKC-5-REEL    |\n| 27   | 10  | DUAL AUDIO OP AMP                  | U12-20,U28           | ANALOG           | SSM2275S             |\n| Item | Qty | Description          | Reference Designator | Manufacturer   | Part Number       |\n|------|-----|----------------------|----------------------|---------------|-------------------|\n| 28   | 3   | TANT CAP             | CT23-25              | AVX           | TAJC475K025R      |\n| 29   | 1   | POWER JACK           | P16                  | SWITCHCRAFT   | SC1152-ND12       |\n| 30   | 1   | USB CONNECTOR        | P2                   | MILL-MAX      | 897-30-004-90-000000 |\n| 31   | 1   | FIBER OPTIC REV MODULE | P4                  | TOSHIBA       | TORX173           |\n| 32   | 1   | RCA 4X2              | P8                   | SWITCHCRAFT   | PJRAS4X2U01       |\n| 33   | 1   | RCA 1X1              | P5                   | SWITCHCRAFT   | PJRAN1X1U01       |\n| 34   | 1   | RCA 2X2              | P6                   | SWITCHCRAFT   | PJRAS2X2S01       |\n| 35   | 2   | LNKPR 12X2           | P13-14               | HONDA(TSUSHINK) | RMCA-EA26LMY-0M03-A |\n| 36   | 1   | .05 10X2             | P15                  | AMP           | 104069-1          |\n| 37   | 8   | 6MM PUSH BUTTON      | SW1-8                | PANASONIC     | EVQ-PAD04M        |\n| 38   | 1   | 10 1/8W 5% 1206      | R2                   | PANASONIC     | P10ECT-ND         |\n| 39   | 6   | 0.00 1/8W 5% 1206    | R153,R154,R168-169,R217,R218 | YAGEO | P0.0ETR           |\n| 40   | 8   | AMBER LED            | LED2-7,LED9-10       | PANASONIC     | LN1461C-TR        |\n| 41   | 8   | 330pF 50V 5% 805     | C36,C42,C48,C54,C60,C66,C72,C78 | AVX | 08055A331JAT      |\n| 42   | 80  | 0.01uF 100V 10% 805  | C2,C6-7,C91-149,C154-155,C165-171,C184-C186,C174-179 | AVX | 08051C103KAT2A    |\n| 43   | 11  | 0.22uF 25V 10% 805   | C156-164,C172,C183   | AVX           | 08053C224FAT      |\n| 44   | 15  | 0.1uF 50V 10% 805    | C1,C5,C9-11,C33,C87-90,C150-153,C173 | AVX | 08055C104KAT      |\n| 45   | 8   | 0.001uF 50V 5% 805   | C14-15,C19-20,C24-25,C29-30 | AVX | 08055A102JAT2A    |\n| 46   | 5   | 10uF 16V 10% C       | CT19-22,CT36         | AVX           | TAJC106K016R      |\n| 47   | 4   | 33 100MW 5% 805      | R1,R150,R176,R152    | AVX           | CR21-330JTR       |\n| 48   | 4   | 4.7K 100MW 5% 805    | R184,R188,R189,R191  | AVX           | CR21-4701F-T      |\n| 49   | 11  | 680 100MW 5% 805     | R137-147             | AVX           | CR21-6800F-T      |\n| 50   | 1   | 1M 100MW 5% 805      | R12                  | AVX           | CR21-1004F-T      |\n| 51   | 1   | 475 100MW 5% 805     | R16                  | AVX           | CR21-471J-T       |\n| 52   | 1   | 1.5K 100MW 5% 805    | R7                   | AVX           | CR21-1501F-T      |\n| 53   | 2   | 2.00K 1/8W 1% 1206   | R49-50               | DALE          | CRCW1206-2001FRT1 |\n| 54   | 10  | 49.9K 1/8W 1% 1206   | R66,R74,R82,R90,R98,R106,R114,R122,R192,R206 | AVX | CR32-4992F-T      |\n| 55   | 2   | 2.21K 1/8W 1% 1206   | R10-11               | AVX           | CR32-2211F-T      |\n| Item | Qty | Description       | Reference Designator | Manufacturer | Part Number |\n|------|-----|-------------------|----------------------|--------------|-------------|\n| 56   | 24  | 100pF 100V 5% 1206| C12,C16-17,C21-22,C26-27,C31,C35,C38 | AVX          | 12061A101JAT2A |\n| 57   | 24  | 100pF 100V 5% 1206| C41,C44,C47,C50,C53,C56,C59,C62,C65,C68, | AVX          | 12061A101JAT2A |\n| 58   | 24  | 100pF 100V 5% 1206| C71,C74,C80,C77,     | AVX          | 12061A101JAT2A |\n| 59   | 5   | 10uF 16V 10% B    | CT1-4,CT11           | AVX          | TAJB106K016R |\n| 60   | 7   | 100 100MW 5% 805  | R123,R125,R127,R129,R131,R133,R135 | AVX          | CR21-101J-T  |\n| 61   | 8   | 220pf 50V 10% 1206| C39,C45,C51,C57,C63,C69,C75,C81 | AVX          | 12061A221JAT2A |\n| 62   | 1   | 0.06 CHOKE        | FER13                | MURATA       | PLM250S40T1  |\n| 63   | 2   | SILICON RECTIFIER | D1-2                 | GENERALSEMI  | S2A          |\n| 64   | 12  | 0.70 BEAD         | FER1-12              | STEWARD      | HZ1206B601R  |\n| 65   | 8   | 237 1/8W 1% 1206  | R23,R27,R30,R34,R40-41,R47-48 | KOA          | RK73H2BT2370F |\n| 66   | 4   | 750K 1/8W 1% 1206 | R25,R32,R38,R45      | KOA          | RK73H2BT7503F |\n| 67   | 16  | 5.76K 1/8W 1% 1206| R21,R22,R24,R26,R28-29,R31,R33,R35-37,R39,R42-44,R46 | DALE        | CRCW12065761FRT1 |\n| 68   | 8   | 11.0K 1/8W 1% 1206| R59,R67,R75,R83,R91,R99,R107,R115 | DALE        | CRCW12061102FTR1 |\n| 69   | 1   | 68NF 50V 10% 805  | C8                   | MURRATA      | GRM40X7R683K050AL |\n| 70   | 8   | 120PF 50V 5% 1206 | C13,C18,C23,C28,C187-190 | PHILLIPS    | 1206CG121J9B200 |\n| 71   | 1   | 75 1/8W 5% 1206   | R14                  | PHILIPS      | 9C12063A75R0JLRT/R |\n| 72   | 2   | 820PF 100V 10% 1206| C32,C34              | AVX          | 12061A821KAT2A |\n| 73   | 2   | 30PF 100V 5% 1206  | C3-4                 | AVX          | 12061A300JAT2A |\n| 74   | 8   | 680PF 50V 1% 805  | C37,C43,C49,C55,C61,C67,C73,C79 | AVX        | 08055A681FAT2A |\n| 75   | 8   | 2.74K 1/8W 1% 1206| R63,R71,R79,R87,R95,R103,R111,R119 | PANASONIC  | ERJ-8ENF2741V |\n| 76   | 16  | 5.49K 1/8W 1% 1206| R60,R61,R68,R69,R76,R77,R84,R85,R92,R93,R100,R101,R108,R109,R116,R117 | PANASONIC | ERJ-8ENF5491V |\n| 77   | 8   | 3.32K 1/8W 1% 1206| R62,R70,R78,R86,R94,R102,R110,R118 | PANASONIC | ERJ-8ENF3321V |\n| 78   | 2   | 100 1/8W 1% 1206  | R54,R57              | PANASONIC    | ERJ-8ENF1000V |\n| 79   | 8   | 1.65K 1/8W 1% 1206| R64,R72,R80,R88,R96,R104,R112,R120 | PANASONIC | ERJ-8ENF1651V |\n| 80   | 6   | 10UF 16V 20%      | CT5-10               | DIGI-KEY     | PCE3062TR-ND |\n| 81   | 10  | 68UF 25V 20%      | CT26-35              | PANASONIC    | EEV-FC1E680P |\n| Item | Qty | Description               | Reference Designator | Manufacturer       | Part Number     |\n|------|-----|--------------------------|----------------------|--------------------|-----------------|\n| 82   | 1   | 365K 1/8W 1% 1206        | R215                 | DIGI-KEY           | P365KFCT-ND     |\n| 83   | 1   | 634K 1/8W 1% 1206        | R214                 | DIGI-KEY           | P634KFCT-ND     |\n| 84   | 1   | 2A SL22 DO-214AA         | D3                   | GENERAL SEMI       | SL22            |\n| 85   | 2   | 10K 100MW 2% RNET16      | RN1-2                | CTS                | 767-161-103G    |\n| 86   | 1   | 1K 1/8W 5% 1206          | R5                   | AVX                | CR32-102J-T     |\n| 87   | 2   | 100K 1/8W 5% 1206        | R167,R213            | AVX                | CR32-103J-T     |\n| 88   | 2   | 1.00K 1/8W 1% 1206       | R53,R56              | DALE               | CRCW1206-1001FRT1 |\n| 89   | 2   | 20.0K 1/8W 1% 1206       | R170, R173           | DALE               | CRCW1206-2002FRT1 |\n| 90   | 2   | 22 1/8W 5% 1206          | R8-9                 | AVX                | CR32-220J-T     |\n| 91   | 1   | 74FCT244AT QSOP20        | U23                  | CYPRESS            | CY74FCT244ATQC  |\n| 92   | 4   | 10.0K 1/8W 1% 1206       | R51-52,R55,R58       | DALE               | CRCW1206-1002FRT1 |\n| 93   | 2   | RED-SMT                  | LED1,LED8            | PANASONIC          | LN1261C         |\n| 94   | 1   | GREEN-SMT                | LED11                | PANASONIC          | LN1361C         |\n| 95   | 8   | 604 1/8W 1% 1206         | R65,R73,R81,R89,R97,R105,R113,R121 | PANASONIC | ERJ-8ENF6040V |\n| 96   | 7   | 1uF 25V 20% A            | CT12-18              | AVX                | TAJA105K035R    |\n| 97   | 3   | QUICKSWITCH              | U31,U35,U36          | ANALOG DEV.        | ADG774ABRQ      |\n| 98   | 6   | IDC 2X1                  | JP1,JP4-5,JP22-23,JP25 | BERG               | 54101-T08-02    |\n| 99   | 4   | IDC 3X1                  | JP2-3,JP9-10         | BERG               | 54101-T08-03    |\n| 100  | 1   | IDC 2X2                  | JP6                  | BERG               | 54102-T08-02    |\n| 101  | 6   | IDC 3X2                  | JP7-8,JP11,JP19-21   | BERG               | 54102-T08-03    |\n| 102  | 1   | IDC 7X2                  | P12                  | BERG               | 54102-T08-07    |\n| 103  | 1   | 2.5A RESETABLE FUSE      | F1                   | RAYCHEM CORP.      | SMD250-2        |\n| 104  | 2   | 3.5MM STEREO_JACK        | P7,P17               | SHOGYO             | SJ-0359AM-5     |\n## INDEX\n\n**A**\n\n- AD1836 .................................................. 3-5\n- AD1852 .................................................. 3-5\n- ADC1 .................................................. 4-7\n- ADC2 .................................................. 4-7\n- Architecture ........................................... 4-2\n- Audio .................................................. 4-14\n- Audio Interface .... 3-5. See SPORT0 and SPORT2\n\n**B**\n\n- BMS Enable ........................................... 4-10\n- Boot Mode Select .................................... 4-8\n- Breadboard ........................................... 4-4\n\n**C**\n\n- Clock Mode ........................................... 4-9\n- Clock Mode Jumpers ................................ 4-2\n- Connectors ........................................... 4-14\n  - P10 .................................................. 4-3\n  - P11 .................................................. 4-3\n  - P12 .................................................. 4-15\n  - P12 .................................................. 4-3\n  - P13 and P14 ....................................... 4-15\n  - P15 .................................................. 4-16\n  - P16 .................................................. 4-16\n  - P17 .................................................. 4-14\n  - P2 .................................................. 4-14\n  - P3 .................................................. 4-3, 4-8\n  - P4 \u2013 P8 ............................................. 4-14\n  - P9 and P10 ......................................... 4-15\n- Contents .............................................. 2-1\n- Core Voltage .......................................... 4-2\n- CS8414 .................................................. 3-5\n- Current Measurements ............................. 4-17\n- Customer Support ................................... 1-3\n\n**D**\n\n- Documents ........................................... 1-4, 1-6\n\n**E**\n\n- Example Programs ................................... 3-6\n- External Port ......................................... 4-3, 4-15\n\n**F**\n\n- Features ............................................... 1-1\n- FLAG0 .................................................. 4-6\n- FLAG1 .................................................. 4-6\n- Flags .................................................. 3-4\n- Flash Memory ........................................ 3-2, 4-3\n- Flash Programmer Utility ......................... 3-6\n\n**H**\n\n- Help, On-line ......................................... 1-4\n- Host Processor Interface ......................... 4-3, 4-15\n\n**I**\n\n- Installation ........................................... 2-2, 2-10\n  - Verification ....................................... 2-15\n    - Windows 2000 USB Driver ............ 2-11\n    - Windows 98 USB Driver ............... 2-6\n- Interrupts ........................................... 3-5\n- IO Voltage ........................................... 4-2\n\n**J**\n\n- JTAG .................................................. 4-4, 4-15\n- Jumpers .............................................. 4-4\n  - Default Settings ............................... 2-4, 2-5\n  - JP1 .................................................. 4-3, 4-5, 4-8\n  - JP11 .................................................. 4-7\n  - JP19 .................................................. 4-8\n  - JP2 .................................................. 4-6\n  - JP20 .................................................. 4-8\n  - JP21 .................................................. 4-9\n  - JP22 .................................................. 4-10\n  - JP3 .................................................. 4-6\n  - JP4 .................................................. 4-6\n  - JP5 .................................................. 4-6\n  - JP6 .................................................. 4-6, 4-9\n  - JP7 and JP8 ....................................... 4-7\n  - JP9 and JP10 ...................................... 4-7\n\n**L**\n\n- LEDs .................................................. 4-1, 4-10\n  - LED1 .................................................. 2-5, 4-11\n  - LED10 .................................................. 4-12\n  - LED11 .................................................. 2-5, 4-12\n  - LED2 - LED7 ...................................... 3-4, 4-12\n| Topic                        | Page Numbers |\n|------------------------------|--------------|\n| LED3                         | 2-5, 2-15    |\n| LED7                         | 2-15         |\n| LED8                         | 4-11, 4-12   |\n| LED9                         | 4-12         |\n| Link Ports                   | 4-5, 4-15    |\n| **M**                        |              |\n| MCLK                         | 4-6          |\n| Memory Map                   | 3-2, 3-3     |\n| MIC Pre-Amp                  | 4-7          |\n| **P**                        |              |\n| PC Configuration             | 2-2          |\n| Power Connector              | 4-16         |\n| Processor ID                 | 4-8          |\n| Programmable Flags           | 4-13         |\n| Push Buttons                 | 4-13         |\n| Push Buttons ..... 4-10. See also Switches |        |\n| **R**                        |              |\n| Reset                        | 4-11         |\n| Board                        | 4-13         |\n| DSP                          | 4-11         |\n| Restrictions                 | 3-2          |\n| **S**                        |              |\n| Sample Frequency             | 4-6          |\n| SDRAM                        | 3-2, 3-3, 4-5 |\n| SPDIF                        | 4-6          |\n| SPI                          | 3-5, 4-3     |\n| SPORT0                       | 4-3          |\n| SPORT1 and SPORT3            | 4-16         |\n| SPORT2                       | 4-3          |\n| Switches                     | 4-10         |\n| Default Settings             | 2-4          |\n| SW1                          | 2-15, 3-4, 4-13 |\n| SW2                          | 3-4, 4-13    |\n| SW3                          | 3-4, 4-13    |\n| SW4                          | 3-4          |\n| SW5                          | 3-5          |\n| SW6                          | 3-5          |\n| SW7                          | 3-5          |\n| **U**                        |              |\n| UART                         | 4-9          |\n| USB                          | 4-14         |\n| Monitor LED                  | 4-12         |\n| **V**                        |              |\n| VERF                         | 3-6          |\n| VisualDSP++                  |              |\n| Help                         | 1-4          |\n| License                      | 2-3, 3-2     |\n| Starting                     | 2-16         |\n", "source": "olmocr", "added": "2025-09-29", "created": "2025-09-29", "metadata": {"Source-File": "tests/gnarly_pdfs/instructions_and_schematics.pdf", "olmocr-version": "0.3.4", "pdf-total-pages": 106, "total-input-tokens": 171912, "total-output-tokens": 25281, "total-fallback-pages": 0}, "attributes": {"pdf_page_numbers": [[0, 0, 1], [0, 1449, 2], [1449, 2521, 3], [2521, 6316, 4], [6316, 7903, 5], [7903, 12213, 6], [12213, 13827, 7], [13827, 15877, 8], [15877, 15896, 9], [15896, 15896, 10], [15896, 17155, 11], [17155, 18293, 12], [18293, 19691, 13], [19691, 21330, 14], [21330, 23116, 15], [23116, 24157, 16], [24157, 24839, 17], [24839, 25324, 18], [25324, 25641, 19], [25641, 25968, 20], [25968, 26086, 21], [26086, 26307, 22], [26307, 26749, 23], [26749, 26845, 24], [26845, 26994, 25], [26994, 27072, 26], [27072, 27973, 27], [27973, 28731, 28], [28731, 30179, 29], [30179, 31104, 30], [31104, 32757, 31], [32757, 34332, 32], [34332, 36802, 33], [36802, 38320, 34], [38320, 39253, 35], [39253, 39931, 36], [39931, 41921, 37], [41921, 42680, 38], [42680, 43078, 39], [43078, 44758, 40], [44758, 46440, 41], [46440, 47933, 42], [47933, 50131, 43], [50131, 50789, 44], [50789, 51043, 45], [51043, 52353, 46], [52353, 54117, 47], [54117, 54977, 48], [54977, 57076, 49], [57076, 58866, 50], [58866, 59533, 51], [59533, 63069, 52], [63069, 66028, 53], [66028, 68740, 54], [68740, 71352, 55], [71352, 71352, 56], [71352, 75705, 57], [75705, 78117, 58], [78117, 78117, 59], [78117, 78117, 60], [78117, 78117, 61], [78117, 78117, 62], [78117, 78117, 63], [78117, 78117, 64], [78117, 78117, 65], [78117, 78117, 66], [78117, 78117, 67], [78117, 78117, 68], [78117, 78117, 69], [78117, 78117, 70], [78117, 78117, 71], [78117, 78117, 72], [78117, 78117, 73], [78117, 78117, 74], [78117, 78117, 75], [78117, 78117, 76], [78117, 78117, 77], [78117, 78117, 78], [78117, 78117, 79], [78117, 78117, 80], [78117, 78117, 81], [78117, 78117, 82], [78117, 78117, 83], [78117, 78117, 84], [78117, 78117, 85], [78117, 78117, 86], [78117, 78117, 87], [78117, 78117, 88], [78117, 78117, 89], [78117, 78117, 90], [78117, 78117, 91], [78117, 78117, 92], [78117, 78117, 93], [78117, 78117, 94], [78117, 78117, 95], [78117, 78117, 96], [78117, 78117, 97], [78117, 78117, 98], [78117, 78117, 99], [78117, 78117, 100], [78117, 78117, 101], [78117, 78117, 102], [78117, 78117, 103], [78117, 78117, 104], [78117, 78117, 105], [78117, 78117, 106]], "primary_language": ["en", "en", "en", "en", "en", "en", "en", "en", "en", "None", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "None", "None", "en", "None", "None", "en", "en", "None", "en", "None", "None", "None", "None", "None", "en", "None", "en", "en", "None", "en", "en", "None", "en", "en", "None", "None", "en", "None", "None", "en", "en", "None", "en", "en", "None", "None", "None", "None", "None", "None", "None", "en", "None", "en", "None", "None", "en"], "is_rotation_valid": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "rotation_correction": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "is_table": [false, false, false, true, true, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "is_diagram": [false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]}}
{"id": "ab77c4a85032cfcc76b351ddbd4342b51d98f42d", "text": "How to do the Basics\n\nAnd Other Little Helpful Hints\nWhat are the basics?\n\n\u2022 Organization\n\u2022 Development\n\u2022 Expression\n\u2022 Creating a thesis\n\u2022 Introduction Paragraphs\n\u2022 Body Paragraphs\n\u2022 Conclusion Paragraphs\nCreating a Thesis\n\n\u2022 What is this thesis thingy?\n\u2022 The thesis is a fancy name for your main argument or idea in an essay\n\u2022 The thesis is called many other names:\n  In a science lab: it\u2019s called a hypothesis\n  In math: it\u2019s your proof\n  In English: it may be called a dominant idea or major premise\n\u2022 In reality though, a thesis is just another name for reading something and saying \u201cSo What?\u201d\nSo What?\n\n\u2022 Every essay needs a \u201cSo What\u201d Factor or SWF\u2026It\u2019s kind of like asking \u201cSo what\u2019s in it for me? What\u2019s your point?\u201d\n\n\u2022 Whenever you watch a movie, a commercial or TV show, there always has to be something in it for the audience to enjoy or learn from\n\n\u2022 So, in your essay, or other writing assignments, make sure there is a main point you\u2019re getting across\n\n\u2022 There must be a reason why you\u2019re writing in order for there to be a reason why it\u2019s important for someone to read it\n\n\u2022 Imagine your teacher reading your assignment and wondering, \u201cSo what? What\u2019s your point? Why are you telling me all this information?\u201d\n\n\u2022 Bottom line: you have to have a meaningful purpose\nOrganization\n\n\u2022 The key to organizing any written assignment is pre-writing out ideas before you start writing (Prewriting strategies can be found in the \u201cPrewriting\u201d section of this website)\n\n\u2022 Organization is one of the biggest factors in a written document\n\n\u2022 Think of a closet- you have to separate the shirts, the pants, the skirts, the sweaters etc in order to have access to them quickly.\n\n\u2022 Well in an essay, your thoughts must be organized so your audience can access the meaning of the information\n\n\u2022 In a closet, if you buy more shirts, you might even have to reorganize so that you separate long sleeves, short sleeves, collar shirts, tank-tops etc\n\n\u2022 Also, in an essay, if your paragraph contains too much information on one main topic that can be divided again into more specific topics, then you must reorganize and separate them into two paragraphs\nWhat if I still have problems with organization?\n\n\u2022 If you pre-write your ideas, write your paper and still find that your paragraphs overlap with ideas and your sentences vary from topic to topic then you can try a color coding trick when you revise your essay.\n\n\u2022 Simply get 4 or 5 different colored markers or crayons and underline or highlight your sentences that represent specific points in your argument.\n\nExample: Lets say you wrote an essay that discussed pollution but your points were all mixed up in different paragraphs. Highlight all the sentences that deal with health issues green; underline all the sentences that deal with mental issues blue; color all the sentences that deal with the economic issues in red; and so on. Once you\u2019ve color coded your essay, you can see where you need to cut and paste to reorganize your paragraphs into specific points.\n\n\u2022 Remember paragraphs should be like buckets: one for water, one for sand, one for rocks- if you mix them together, all you will get is mud.\nSentence Organization\n\n\u2022 So now that you\u2019ve mastered paragraph organization you need to see if your sentences are organized.\n\n\u2022 Ask: Do my sentences follow a chronological or logical order?\n\n\u2022 Ask: Are my transition sentences in places that do not distract the reader?\n\n\u2022 Ask: Are my examples backing up my statements and do my explanations tie into my thesis?\n\n\u2022 Do any of my sentences stick out of my paragraphs or do they need revising?\nDevelopment\n\n\u2022 Now that your points are organized, you must develop them for your audience to believe and/or understand.\n\n\u2022 A developed essay does not have a set amount of paragraphs or a magic number of pages.\n\n\u2022 So how long is long enough?\n\n\u2022 Your essay is complete once you have thoroughly explained all of your points with credible examples and you have given critical analysis for those examples that all tie into your argument.\nHow do I know if I\u2019ve developed my points?\n\n\u2022 Ask: Are there any paragraphs that visually stand out because they are so small?\n\u2022 Ask: Do all paragraphs have specific examples that show, not tell, my reader how my point works?\n\u2022 Ask: Do all paragraphs have transitions between points and examples?\n\u2022 Ask: Have I answered all questions that my reader might have about this subject?\n\u2022 Ask: Do all of my paragraphs have sentences that tie my information into my thesis?\nExpression\n\n\u2022 Expression covers all the little aspects of a written assignment that affects how a reader understands your ideas: grammar, syntax (sentence structure), diction (vocabulary), tone, citations etc.\n\n\u2022 Some teachers may call this style, grammar or something else but basically it\u2019s all the small items that can alter, confuse or change your intended meaning.\n10. **Overusing the exclamation mark!!!!!!**\n\nUnless you are writing a birthday card or a love letter to your significant other, exclamation marks are very distracting in a formal academic assignment and quite honestly they look childish.\n\nExample: \u201cIn the course of Hitler\u2019s Nazi Germany rule, over 6 million Jews were murdered!\u201d\n\nEven though this is an astounding fact, the exclamation mark alters the tragic tone of the sentence into something exciting.\n9. **Slang or profanity in your diction (vocab)**\n\nAgain, unless you are writing a personal note to a friend, slang and profanity do not belong in a formal academic writing assignment.\n\nExample: \u201cSo next, the special ops military busted out their gats on Iraq.\u201d\n\nThe language completely changed the serious tone of the situation expressed and the meaning was deteriorated.\n8. **Obvious transitions**\n\nTransitions should connect the ideas from paragraph to paragraph or sentence to sentence; they should not simply number the points of argument.\n\nExample: \u201cFirst, the student did not do his homework, second he failed his test and thirdly, he got grounded.\u201d\n\nNumbering sentences and/or paragraphs do not create connections or meaning for the audience, they merely show a numerical order.\n7. **Extra Words- that are not needed**\n\nWords: that, like, and the are often included in our speech in order to create time for our brains to speak and think at the same time. However, when we write them in our assignments- they clutter our meaning and make it difficult to read.\n\nExample: \u201cNo more money would be going to inmates that they would no longer exist.\u201d\n\nExtra words confuse meaning- Keep it simple and say exactly what you want to say.\n6. **Overusing questions**\n\nYour goal in your paper is to get the audience to understand your points; therefore, you should not distract the reader by asking them questions that make them think about their own points. Too many rhetorical questions in the middle of your paragraphs can completely ruin your goal.\n\nExample: \u201c*Why do Americans burn the flag they love? Why do they dishonor their history?*\u201d\n\nDon\u2019t ask your audience what they think; instead tell them what you think and be bold.\n5. **Overusing pronouns**\n\nWhen you replace too many of the nouns in your sentences with words: it, they, them, etc\u2026 it becomes difficult for the audience to follow your point because they cannot figure out who is who and what is what.\n\nExample: \u201cWhen students and parents fight about it then they get defensive and then they do it all over again.\u201d\n\nThe audience doesn\u2019t know what is going, much less, understand the point.\n4. **Clich\u00e9s**\n\nClich\u00e9s are overused phrases and sentences that create boredom for the reader; they do not contain or help create meaning for the audience.\n\nExample: \u201cSince the dawn of time\u2026\u201d\n\nClich\u00e9s are usually cheesy sayings that distract the reader from your main point.\n3. **Passive Voice**\n\nWhenever you overuse the \u201cto be\u201d verbs (be, are, is) in a sentence, it becomes verbose, wordy and difficult to understand.\n\nExample: \u201cShe is walking in the room.\u201d\n\nThe actual action verb for this sentence is walking so we don\u2019t need the \u201cis.\u201d It could be changed to \u201cShe walks in the room.\u201d\n\n- For more information on passive voice, look at the handout in this website\n2. **Second Person**\n\nFirst person is when we use \u201cI\u201d in writing which is only appropriate in some cases so you should ask your teacher if it\u2019s allowed. Second person is when you use \u201cyou, us, we, your etc\u201d in writing. Third person is an objective point of view where you address specific audiences like \u201cPeople, teens, parents\u201d etc.\n\nExample of Second Person: \u201c*You should not use second person.*\u201d\n\nSecond person is useful for how to explain a process or give advise (like this power point) but it should not be used for formal academic essays because it could offend or distract the audience.\nAnd the Number 1 Error that annoys teachers is\u2026\n\n1. **Non-cited sources or citing sources incorrectly**\n\n   When sources are not cited in the text and on a works cited page, it is plagiarism AKA cheating and you will face severe consequences. When sources are cited incorrectly, it can be distracting for your reader, you can lose credibility with your reader or your reader may not be able to access your sources.\n\n   Example: \u201c3 out of 5 doctors prescribe aspirin\u201d (www.aol.com)\n\n   Web addresses should not be put inside the text\n\n   \u2022 For information on citing sources, review the grammar links on this website or check out www.mla.com\nTest Taking Strategies\n\n\u2022 In-class essays can create anxiety\n\u2022 Just remember to write as you would for an out-of-class essay - use all the processes\n\u2022 Be sure to pre-write, write an introduction paragraph with an arguable and meaningful thesis, write several body paragraphs that support your thesis and write a conclusion paragraph that expresses the importance of all the information given\n\u2022 Be sure to answer the question that is asked - review the handout on this website\nImagine that an introduction paragraph is like an upside down triangle where you start with broad statements and then narrow your focus into your main point.\n\nThe following slides are merely suggestions or guidelines - they are not the end all be all of writing.\nIntroduction Paragraphs\n\nStep 1: You must get the attention of your audience; this has many names: exordium, hook, attention getter, etc.\n\nYou can get the attention through imagery, stories, quotes, statistics, similes, metaphors etc.\n\nExample of what not to do: \u201cGod is hard to define.\u201d (no duh- this is a truism) or \u201cThere are many types of sports.\u201d (Boring)\n\nTry something more exciting: \u201cWhat a beautiful world this is until the very slight touch of bright sunlight sizzles the skin and boils the blood.\u201d (very vivid- I\u2019m interested on reading more)\nIntroduction Paragraphs\n\nStep 2: Now that you have your audience\u2019s attention, you must give them background information so they will understand the focus of your thesis and paper.\n\nThe history of your topic, its current status, the definition of terms and narrowing of your topic are all important items to include in this section in order to build ethos with your audience.\n\nSome teachers may also refer to this as narratio.\n\nStep 3: Get to your point, your thesis AKA your \u201cSo What\u201d factor\nBody Paragraphs\n\n**Step 1:** This has many names: statement, claim, topic sentence, etc. Regardless you should inform your reader what your point is.\n\n**Step 2:** This is sometimes called: examples, concrete details, evidence, data, etc. Basically you have to back up your point with specifics.\n\n**Step 3:** Sometimes this is called: warrant, explanation, analysis, commentary, etc. You just need to explain your examples and show how they work into your argument.\n\nThink of your body paragraphs as hour glasses: they start with broad statements, then they get more specific with examples and then they get broader by explaining how the examples tie into the overall thesis of the paper.\nConclusion Paragraph\n\nStep 1: Address any points your opposition might have against your argument or address any loopholes left in your argument.\n\nStep 2: Offer any insights or how your points can be used at a broader level.\n\nStep 3: Explain the significance of the information and how it can be useful or meaningful.\n\nStep 4: End with a statement full of pathos (emotion) but be sure that it is not a clich\u00e9.\nRemember\n\n\u2022 Don\u2019t try to fix or do everything at once - you\u2019ll get overwhelmed and it won\u2019t remember what you learned for next time.\n\n\u2022 Do try to work on one problem with your writing at a time - set a goal.\n\n\u2022 Don\u2019t wait until the last minute or do a lengthy assignment all at once.\n\n\u2022 Do ask for help from a friend, a parent or a teacher.\n\n\u2022 Just work on the basics first - then use your creativity to write in your own distinct style.", "source": "olmocr", "added": "2025-09-29", "created": "2025-09-29", "metadata": {"Source-File": "tests/gnarly_pdfs/large_prompt_hint1.pdf", "olmocr-version": "0.3.4", "pdf-total-pages": 27, "total-input-tokens": 47304, "total-output-tokens": 3535, "total-fallback-pages": 0}, "attributes": {"pdf_page_numbers": [[0, 53, 1], [53, 205, 2], [205, 598, 3], [598, 1278, 4], [1278, 2143, 5], [2143, 3156, 6], [3156, 3596, 7], [3596, 4030, 8], [4030, 4496, 9], [4496, 4866, 10], [4866, 5323, 11], [5323, 5696, 12], [5696, 6110, 13], [6110, 6559, 14], [6559, 7051, 15], [7051, 7475, 16], [7475, 7750, 17], [7750, 8141, 18], [8141, 8736, 19], [8736, 9376, 20], [9376, 9852, 21], [9852, 10115, 22], [10115, 10669, 23], [10669, 11161, 24], [11161, 11849, 25], [11849, 12259, 26], [12259, 12696, 27]], "primary_language": ["en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en"], "is_rotation_valid": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "rotation_correction": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "is_table": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "is_diagram": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]}}
{"id": "9303875b1b7a760051c8af4e4f84f13554834202", "text": "Variation in complex olfactory stimuli and its influence on odour recognition\n\nGeraldine A. Wright* and Brian H. Smith\n\nDepartment of Entomology, Ohio State University, 318 West 12th Avenue, Columbus, OH 43235, USA\n\nNatural olfactory stimuli are often complex and highly variable. The olfactory systems of animals are likely to have evolved to use specific features of olfactory stimuli for identification and discrimination. Here, we train honeybees to learn chemically defined odorant mixtures that systematically vary from trial to trial and then examine how they generalize to each odorant present in the mixture. An odorant that was present at a constant concentration in a mixture becomes more representative of the mixture than other variable odorants. We also show that both variation and intensity of a complex olfactory stimulus affect the rate of generalization by honeybees to subsequent olfactory stimuli. These results have implications for the way that all animals perceive and attend to features of olfactory stimuli.\n\nKeywords: olfactory; honeybee; generalization; natural stimulus; odour recognition\n\n1. INTRODUCTION\n\nOlfactory stimuli are used by animals for many important tasks crucial to their fitness. Naturally occurring olfactory stimuli, such as floral perfumes or animal pheromones, are typically complex and often highly variable combinations of many chemical compounds (Dobson 1994; Laurent 2002; Pichersky & Gershenzon 2002). Each compound in an odour stimulus may differ from the others by several orders of magnitude in concentration (Dobson 1994; Levin et al. 2001). Differences in the ratios of concentration of these compounds can produce distinct perceptual changes that affect odour recognition (Laska & Hudson 1992; Olsson & Cain 2000). Odour recognition is made even more complex by the ephemeral nature of odour mixtures (Crimaldi et al. 2002). Odour stimuli emitted by the same type of \u2018object\u2019 often differ slightly from one encounter to the next, and this variability makes odour objects difficult to classify such that they can be recognized and distinguished.\n\nThe olfactory system of an animal must, therefore, form a memory representation for a class of objects, such as the odour of a flower species that presents nectar to a honeybee, which accounts for variability across objects and allows for identification of all objects that mean the same thing. Several behavioural mechanisms have been identified that may be involved in the extraction of features that can be used to classify stimuli. The features that olfactory stimuli have in common, such as the number and types of odorants present and their concentrations, are likely to be important in classifying stimuli (Chandra & Smith 1998; Hosler & Smith 2000; Wise et al. 2000; Laurent 2002; Wilttrout et al. 2003). Specific features that dominate a mixture, however, such as an odorant that is present at a higher concentration than other odorants, could perceptually overshadow other features. In addition, studies of olfactory blocking indicate that olfactory systems of a variety of animals are capable of perceptually isolating individual odorants or submixtures from a blend (Smith 1998; Hosler & Smith 2000; Giannaris et al. 2002) when the individual odorants were more reliably associated with reinforcement than the other odorants present.\n\nOur study addresses how variability across experiences with an odour stimulus affects the subsequent identification of odour objects. Trial-to-trial variability could lead to consolidation of an olfactory memory that reflects an average of all experiences of odour stimuli. However, we predicted that the subsequent identification of odour objects, in our case odour mixtures, would reflect features that are most reliably associated with reinforcement. We conditioned honeybees to mixtures of odorants that varied qualitatively from trial to trial as they were reinforced with an appetitive reward, and then tested them with each odorant present in the mixture. Generalization from conditioning with a mixture to each of the test odorants was interpreted as a measure of how similar the test odorant was to the mixture.\n\n2. MATERIAL AND METHODS\n\nWorker honeybees (Apis mellifera) were collected from colonies at the Rothenbuhler Honeybee Laboratory, Columbus, OH, USA. Each subject was placed individually in a restraining harness as described by Smith (1998). All experiments used the proboscis extension response assay to evaluate the olfactory learning behaviour of individual subjects (see Smith (1998) for details). Odour stimuli were delivered by placing 5 \u00b5l of odour solution on a small strip of filter paper that was then placed in a modified, 1 ml tuberculin glass syringe attached to an air supply and controlled by a solenoid valve (see Smith (1998) for details).\n\nOur odour stimuli were mixtures of pure monomolecular odorants at specific molarities created using hexane as a solvent. To examine the effect of qualitative variables on generalization from mixtures to the odorants present, we developed two types of odour mixtures: mixtures composed of perceptually \u2018similar\u2019 odorants, and mixtures composed of perceptually \u2018dissimilar\u2019 odorants (Stopfer et al. 1997; Laska et al. 1999; Daly & Smith 2000). The similar odours, 1-hexanol, 1-heptanol and 1-octanol (Sigma, 99.0% + purity), all aliphatic alcohols, differed only with respect to their carbon chain length. The dissimilar odours,\n\n* Author for correspondence (wright.571@osu.edu).\n1-hexanol, geraniol and 2-octanone (Sigma, 99% + purity) differed with respect to their alkyl groups and carbon chain lengths. All of the similar and dissimilar compounds are volatile, oxygenated hydrocarbons commonly encountered in floral perfumes (Knudsen et al. 1993).\n\nTo examine the effect of quantitative variables on generalization, we also varied the concentration of each odorant in the mixture. Individual odorants were presented at one of three possible levels: 0.0002 M (low), 0.02 M (intermediate) and 2.0 M (high). Each concentration was chosen based on its average detectability and discriminability. The low-level odorants were detectable above a solvent background both as conditioning stimuli and as stimuli in an electroantennogram (EAG) assay (Wright & Smith 2004). The high-level odorants were chosen based on their EAG responses relative to the other two odorant levels and the response of the antenna to undiluted odorant (Bhagavan & Smith 1997; Wright & Smith 2004).\n\n(a) The contribution of individual odorants\n\nThe first experiment was designed to examine if perceptual qualities of mixtures are dominated by the odorants that were reliably associated with reinforcement. In our experiments, this was the odorant present with the least variability in concentration throughout conditioning. To accomplish this, we held one odorant of a mixture at a constant low or high concentration (either 0.0002 M or 2.0 M) while varying the other odorants from trial to trial at the low (0.0002 M) or the high (2.0 M) concentration. Thus, four different mixtures were used for each constant odorum (e.g. for the low constant: L : L : L : L : H : L : L : L : H ; where L is low concentration and H is high concentration, and the underlined letter is the constant odorum). Each subject was trained with a pseudo-random array of these four mixtures over 16 trials and was exposed to each mixture four times during training.\n\nEight different combinations of training and testing conditions were used in separate groups of subjects. Mixtures were composed of either similar or dissimilar odours. Within each mixture composition, subjects were trained with the constant odorant at either the low or the high concentration. Finally, each of the four mixture groups was tested with either the low or the high concentration of each of the odorants.\n\nAn additional control group was also performed with the similar and dissimilar mixtures to test whether it was the average concentration during conditioning that affected generalization, or whether it was the variability in concentration. First, one mixture held all odorants at a constant, intermediate concentration (0.02 M) across all 16 acquisition trials. Second, a mixture was used in which 1-hexanol was maintained at a constant (intermediate) 0.02 M level, but the remaining odorants varied at either 0.0002 M or 2.0 M. In the latter mixture the average level of each odorant was 0.02 M, but the odorants varied in concentration from trial to trial. After conditioning, each subject was tested with the low concentration of each of the odorants of the mixture.\n\n(b) Variation versus mixture intensity\n\nThis experiment was designed to test how variability in mixture intensity and the absolute level of mixture intensity affected generalization to low-concentration odorants. Intensity of a single mixture was gauged by summing the respective molarities of each of the odorants. Variability in the intensity of the mixture was generated by causing, as before, the concentration of all of the odorants of a mixture to vary from trial to trial during acquisition. The mean intensity level of variable mixtures was calculated by averaging the intensity of each mixture over all the trials. The coefficient of variation (CV = [s.d. \u00d7 100]/mean; Sokal & Rohlf 1995) was then calculated from the average intensities over all the trials. Both the similar and dissimilar odour mixtures were used.\n\nTwo levels of variability were used in different treatment groups of subjects: constant (CV = 0) and variable (CV = 72 for the mid-level intensity condition and 75 for the high). Two levels of mean intensity were used: mid (0.03 M in the variable condition and 0.06 M in the constant condition) and high (2.0 M in the variable and 2.1 M in the constant). To produce an average concentration with integer levels of odorants in a mixture, our mixture intensities resulted in a range that varied from trial to trial. We used intermediate (0.02 M) and low (0.0002 M) concentrations of each odorant to produce a mean intensity of 0.03 M for the mid-level, and we used intermediate (0.02 M) and high (2.0 M) concentrations to produce a mean intensity of 2.0 M for the high level. We were unable to use the original odorant concentrations to produce a constant mean intensity at the high level with no variation. We therefore chose a concentration of 0.7 M for each odorant. The variable mixtures had a range of 0.0006\u20130.06 M for the low intensity and 0.02\u20134.02 M for the high intensity. After acquisition, subjects were tested with the low-level odorants of the mixtures as described in the previous experiment.\n\n(c) Statistical analyses\n\nFor all of the experiments, the responses of subjects were scored as binary variables, and we used multivariate logistic regression to test all hypotheses (Agresti 1996).\n\n3. RESULTS\n\nIn all of our experiments, we conditioned subjects to respond to a mixture of three odorants, and we then tested each of the odorants present in the mixture. The rate of generalization to the test odorants was interpreted as a measure of the perceptual similarity between the mixture and the test odorants. Differences in generalization across treatment conditions were interpreted as an index of the way that our experimental conditions affected consolidation of memory for the mixture.\n\n(a) A mixture was more similar to a constant odorant than to a variable odorant\n\nWe evaluated whether the constant odorant was responded to with a greater probability than the other odorants by comparing the differences in mean response levels to the constant and variable odorants. The result depended on the mixture type (figure 1). For similar mixtures, responses to constant and variable odorants were not significantly different, regardless of whether the subjects had been trained to either the low-constant odorant or the high-constant odorant (logistic regression: $\\chi^2 = 0.60$, $n = 178$, $p = 0.434$; figure 1a,c). For the mixtures of dissimilar odorants, the response depended on the level of the constant odour during conditioning and the level of the test odorants (logistic regression: $\\chi^2 = 17.6$, $n = 226$, $p < 0.001$; figure 1b,d). Subjects generalized significantly more to the constant odorant than to the variable odorants, except for the condition in which subjects were tested with high levels of odorants after conditioning.\nwith a low-constant odorant (logistic regression: $\\chi^2 = 6.91$, $n = 226$, $p < 0.01$; figure 1d). In this case, subjects generalized significantly more to the variable odorants.\n\nThe control group revealed that the variability in an odorant\u2019s concentration influenced generalization more than the odorant\u2019s average intensity. Subjects conditioned to mixtures of similar odorants generalized to each test odorant with equal probability regardless of variability in concentration (logistic regression: $\\chi^2 = 1.39$, $n = 42$, $p = 0.237$; figure 1e). For the mixtures of dissimilar odorants, the response to a constant odorant was greater than the response to the variable odorants (logistic regression: $\\chi^2 = 4.62$, $n = 41$, $p = 0.03$; figure 1f).\n\n(b) Constant odorant concentration and mixture type influenced generalization\n\nThe average rate of generalization from mixtures to all of the test odorants depended on the difference in the concentration of the constant odorant during initial training and the concentration of the test (figure 1). For example, when tested with low-concentration odorants (figure 1a,b), subjects trained with the constant odorant at the low concentration (shaded bars) responded significantly more than subjects conditioned to mixtures that contained a high-constant odorant (logistic regression: $\\chi^2 = 7.06$, $n = 217$, $p < 0.01$). Furthermore, the average response levels to all of the test odorants were greater for the similar mixtures than for the dissimilar mixtures (logistic regression: $\\chi^2 = 17.0$, $n = 217$, $p < 0.001$).\n\nGeneralization to high concentration test odorants increased for both types of odorants, though dissimilar odorants had a lower rate of generalization (logistic regression: $\\chi^2 = 16.6$, $n = 187$, $p < 0.001$; figure 1c,d). Subjects generalized significantly more to a high-constant odorant when conditioned to a mixture that contained a high-constant odorant than when conditioned to a mixture with a constant odorant at a low concentration (logistic regression: $\\chi^2 = 139$, $n = 187$, $p < 0.001$). The opposite pattern was observed for variable odorants.\n\n(c) Mixture variability increases generalization to odorants\n\nThe average rate of generalization to all the test odorants was a function of mixture intensity and variability in mixture intensity. In all four cases, the variable mixtures had greater rates of generalization to test odorants than constant mixtures (logistic regression: $\\chi^2 = 59.7$, $n = 229$, $p < 0.001$; figure 2). Furthermore, when subjects were conditioned to mid-level (0.03\u20130.06 M) intensity mixtures, they responded with a greater probability to the test odorants than subjects conditioned with the high-level (2.0\u20132.1 M) intensity mixtures (logistic regression: $\\chi^2 = 97.9$, $n = 229$, $p < 0.001$).\nThe effect of variability depended on the intensity of the mixture (logistic regression: $\\chi^2 = 12.6$, $n = 229$, $p < 0.001$; figure 2). The increase in generalization from constant to variable mixture treatments was greater at low than at high intensities. Generalization was also slightly higher for dissimilar mixtures (logistic regression: $\\chi^2 = 4.86$, $n = 229$, $p = 0.028$; figure 2b), but the relative patterns across treatments were the same.\n\n4. DISCUSSION\n\nOur results indicate that quantitative variation in a complex, olfactory stimulus during conditioning affected generalization to subsequently experienced odours in two ways. First, individual odorants that were at a constant concentration in a mixture became more associated with the mixture\u2019s identity, whereas variable odorants become less representative. Second, in mixtures where all the odorants were variable, generalization to all subsequent olfactory stimuli was greater than it was for mixtures in which all odorant concentrations were constant. Conditioning with high-intensity stimuli decreased generalization to low-concentration test odorants, as has been shown previously (Marfaing et al. 1989; Bhagavan & Smith 1997; Pelz et al. 1997; Sakura et al. 2002; Cleland & Narla 2003; Wright & Smith 2004). Variability modified the effect of stimulus intensity by increasing generalization to the low-concentration test odorants.\n\n(a) A constant odour influences odour object classification\n\nWhen a subject experienced an odour mixture in our experiments, what it learned about the odour was affected by quantitative variation in each of the odorants present in the mixture during conditioning. We hypothesize that the increase in the contribution of the constant odorant to a mixture\u2019s identity was a function of its more reliable association with reinforcement. Blocking protocols have also demonstrated that the odorants present in a mixture, which are the most reliably associated with reinforcement, gain salience over the other odorants present (Smith 1998; Hosler & Smith 2000). Blocking has been shown to occur when an odorant with a pre-conditioned association with reinforcement is experienced subsequently in a binary mixture. The pre-conditioned odorant often overshadows the presence of another odorant such that the latter is not learned as well as it would have been if no pre-conditioning had taken place (Rescorla & Holland 1982; Rescorla 1988; Pearce 1994). The increase in salience of the pre-conditioned odorant is hypothesized to be mediated by lateral inhibition in the olfactory bulb or antennal lobe, the first synaptic relay for sensory input from the olfactory receptor neurons (Linster & Smith 1997; Urban 2002).\n\n(b) Variation increases generalization\n\nTheories of generalization propose that animals must generalize from a specific instance to subsequent experiences because no two presentations of stimuli can be exactly alike (Pavlov 1927; Kalish 1970; Shepard 1987; Pearce 1994). From a behavioural standpoint, generalization arises from two different mechanisms. First, animals might generalize across stimuli that they can easily discriminate because they have experienced the same reinforcement for each stimulus (Shepard 1987; Pearce 2002). Second, generalization could also arise from a failure of the sensory system to distinguish among stimuli (Shepard 1987; Pearce 1994).\n\nWhen generalization occurs to different stimuli that have been classified together according to their common association with reinforcement (Kalish 1970; Shepard 1987), features that are common to the reinforced stimuli are used to classify novel stimuli. For the conditions in which all the odorants in a mixture varied in concentration, subjects generalized more to the test odorants than subjects who experienced no variation during training. Thus, increasing variation in the stimulus also increased generalization to all subsequent odorant stimuli. These results support the hypothesis that our subjects were generalizing to a class of odour \u2018objects\u2019 and that the extent of the generalization was modified by variability in the stimulus. We show that the features used to classify odour stimuli in the absence of variation are different from the features used to classify stimuli when variability is present.\n\nDifferences in generalization from the conditioning to the test odorants in our study may also have arisen due to the type of odorants present in the mixtures. Subjects conditioned to similar mixtures had higher mean rates of generalization than mixtures of dissimilar odorants, and they showed equal generalization to all of the odorants regardless of the level of variability in concentration. This may have occurred because the odorants present in the similar mixtures were perceptually similar and therefore more difficult for bees to differentiate (Stopfer et al. 1997; Laska et al. 1999). Each odorant may have appeared less variable, causing the effects of variability in the similar mixtures to be dampened.\n(c) Stimulus intensity modulates the effect of variability\n\nFurthermore, a subject\u2019s ability to generalize to low-level odorants was also affected by the intensity of the stimulus during training. If subjects had been trained to a high-intensity stimulus, their response to the low-concentration test odorants significantly decreased. This change in sensitivity from high to low could be facilitated by either of two mechanisms: adaptive gain control or adaptation of the neurons in the antennae and/or antennal lobe.\n\nAdaptive gain control adapts a sensory system to variability in a stimulus by amplifying the stimulus in inverse proportion to its range of intensity (Fairhall et al. 2001). When the range is narrow, the sensory system broadens the intensity-response function to carry as much information as possible about the stimulus within that range. In our study, this mechanism could be tuning the olfactory system to odorants that are present at a specific concentration dependent upon the subject\u2019s exposure to olfactory stimuli of a given intensity and the level of variability present during conditioning.\n\nAlternatively, adaptation of the neurons of the antennal lobe would also change the sensitivity of the olfactory system (Potter & Chorover 1976; Mair 1982; Devaud et al. 2001). If the neurons in the antennal lobe were adapted, exposure to high-intensity stimuli would change the response range such that the olfactory system would respond only to high-intensity stimuli and not to low-intensity stimuli. Adaptation, however, could not account for the change in the response due to the variability of the conditioning stimulus. Which of these two mechanisms caused a reduction in the response to low-concentration odorants after conditioning with high-intensity stimuli remains unclear from our data.\n\n5. CONCLUSIONS\n\nQuantitative variation of the odorants present in an olfactory stimulus affects how animals form olfactory memories. Decreasing the variation of an individual odorant in an odour mixture causes it to gain salience; increasing the variation in all the odorants produces greater generalization. These results indicate that consolidated odour memory depends on variation in stimuli across experiences. This odour memory does not simply reflect the across-trial average values of odorants in a mixture. Rather, the memory seems to be more inclusive of stimuli that were a part of the mixture as a result of variation. Future studies of sensory processing in the antennal lobe may provide insight into the neural mechanisms underlying these results.\n\nThe authors dedicate this article to R. Shepard whose work has inspired their studies of generalization. They also thank M. Thomson and J. Mustard for comments on earlier drafts of the manuscript, B. Skinner and A. Mosier for help with conditioning, and S. Cobey for her honeybee cultures. This research was funded by a grant from NIH-NCRR (9 R01 RR1466) to B.H.S.\n\nREFERENCES\n\nAgresti, A. 1996 An introduction to categorical data analysis. New York: Wiley.\n\nBhagavan, S. & Smith, B. H. 1997 Olfactory conditioning in the honey bee, Apis mellifera: effects of odor intensity. Physiol. Behav. 61, 107\u2013117.\n\nChandra, S. B. C. & Smith, B. H. 1998 An analysis of synthetic odor processing of odor mixtures in the honeybee (Apis mellifera). J. Exp. Biol. 201, 3113\u20133121.\n\nCleland, T. A. & Narla, V. A. 2003 Intensity modulation of olfactory acuity. Behav. Neurosci. 117, 1434\u20131440.\n\nCriminali, J. P., Wiley, M. B. & Koseff, J. R. 2002 The relationship between mean and instantaneous structure in turbulent passive scalar plumes. J. Turbul. 3, article no. 014.\n\nDaly, K. C. & Smith, B. H. 2000 Associative olfactory learning in the moth Manduca sexta. J. Exp. Biol. 203, 2025\u20132038.\n\nDevaud, J. M., Acebes, A. & Ferrus, A. 2001 Odor exposure causes central adaptation and morphological changes in selected glomeruli in Drosophila. J. Neurosci. 21, 6274\u20136282.\n\nDobson, H. E. M. 1994 Floral volatiles in insect biology. In Insect-plant interactions (ed. E. A. Bernays), pp. 47\u201381. Boca Raton, FL: CRC Press.\n\nFairhall, A. L., Lewen, G. D., Bialek, W. & Van Steveninck, R. R. D. 2001 Efficiency and ambiguity in an adaptive neural code. Nature 412, 787\u2013792.\n\nGiannaris, E. L., Cleland, T. A. & Linster, C. 2002 Intramodal blocking between olfactory stimuli in rats. Physiol. Behav. 75, 717\u2013722.\n\nHosler, J. S. & Smith, B. H. 2000 Blocking and the detection of odor components in blends. J. Exp. Biol. 203, 2797\u20132806.\n\nKalish, H. I. 1970 Stimulus generalization. In Learning (ed. M. H. Mark), pp. 207\u2013297. New York: MacMillan.\n\nKnudsen, J. T., Tollsten, L. & Bergstrom, L. G. 1993 Floral scents\u2014a checklist of volatile compounds isolated by headspace techniques. Phytochemistry 33, 253\u2013280.\n\nLaska, M. & Hudson, R. 1992 Ability to discriminate between related odor mixtures. Chem. Sens. 17, 403\u2013415.\n\nLaska, M., Galizia, C. G., Giurfa, M. & Menzel, R. 1999 Olfactory discrimination ability and odor structure-activity relationships in honeybees. Chem. Sens. 22, 457\u2013465.\n\nLaurent, G. 2002 Olfactory network dynamics and the coding of multidimensional signals. Nat. Rev. Neurosci. 3, 884\u2013895.\n\nLevin, R. A., Raguso, R. A. & McDade, L. A. 2001 Fragrance chemistry and pollinator affinities in Nyctaginaceae. Phytochemistry 58, 429\u2013440.\n\nLinster, C. & Smith, B. H. 1997 A computational model of the response of honey bee antennal lobe circuitry to odor mixtures: overshadowing, blocking and unblocking can arise from lateral inhibition. Behav. Brain Res. 87, 1\u201314.\n\nMair, R. G. 1982 Adaptation of rat olfactory bulb neurones. J. Physiol. 326, 361\u2013369.\n\nMarfaing, P., Rouault, J. & Laffort, P. 1989 Effect of the concentration and nature of olfactory stimuli on the proboscis extension of conditioned honeybees, Apis mellifera Ligustica. J. Insect Physiol. 35, 949\u2013955.\n\nOlsson, M. J. & Cain, W. S. 2000 Psychometrics of odor quality discrimination: method for threshold determination. Chem. Sens. 25, 493\u2013499.\n\nPavlov, I. P. 1927 Conditioned reflexes. Oxford University Press.\n\nPearce, J. M. 1994 Similarity and discrimination: a selective review and a connectionist model. Psychol. Rev. 101, 587\u2013607.\n\nPearce, J. M. 2002 Evaluation and development of a connectionist theory of configural learning. Anim. Learn. Behav. 30, 73\u201395.\n\nPelz, C., Gerber, B. & Menzel, R. 1997 Odorant intensity as a determinant for olfactory conditioning in honeybees: roles in discrimination, overshadowing, and memory consolidation. J. Exp. Biol. 200, 837\u2013847.\n\nPichersky, E. & Gershenzon, J. 2002 The formation and function of plant volatiles: perfumes for pollinator attraction and defense. Curr. Opin. Plant. Biol. 5, 237\u2013243.\nPotter, H. & Chorover, S. L. 1976 Response plasticity in hamster olfactory bulb: peripheral and central processes. *Brain Res.* **116**, 419\u2013429.\n\nRescorla, R. A. 1988 Behavioral studies of Pavlovian conditioning. *A. Rev. Neurosci.* **11**, 329\u2013352.\n\nRescorla, R. A. & Holland, P. C. 1982 Behavioral studies of associative learning in animals. *A. Rev. Psychol.* **33**, 265\u2013308.\n\nSakura, M., Okada, R. & Mizunami, M. 2002 Olfactory discrimination of structurally similar alcohols by cockroaches. *J. Comp. Physiol. A* **188**, 787\u2013797.\n\nShepard, R. N. 1987 Toward a universal law of generalization for psychological science. *Science* **237**, 1317\u20131323.\n\nSmith, B. H. 1998 Analysis of interaction in binary odorant mixtures. *Physiol. Behav.* **65**, 397\u2013407.\n\nSokal, R. & Rohlf, F. J. 1995 *Biometry*. New York: Freeman.\n\nStopfer, M., Bhagavan, S., Smith, B. H. & Laurent, G. 1997 Impaired odour discrimination on desynchronization of odour-encoding neural assemblies. *Nature* **390**, 70\u201374.\n\nUrban, N. N. 2002 Lateral inhibition in the olfactory bulb and in olfaction. *Physiol. Behav.* **77**, 607\u2013612.\n\nWiltrot, C., Dogra, S. & Linster, C. 2003 Configurational and nonconfigurational interactions between odorants in binary mixtures. *Behav. Neurosci.* **117**, 236\u2013245.\n\nWise, P. M., Olsson, M. J. & Cain, W. S. 2000 Quantification of odor quality. *Chem. Sens.* **25**, 429\u2013443.\n\nWright, G. A. & Smith, B. H. 2004 Different thresholds for detection and discrimination of odors in the honeybee (*Apis mellifera*). *Chem. Sens.* (Submitted.)", "source": "olmocr", "added": "2025-09-29", "created": "2025-09-29", "metadata": {"Source-File": "tests/gnarly_pdfs/large_prompt_hint2.pdf", "olmocr-version": "0.3.4", "pdf-total-pages": 6, "total-input-tokens": 9684, "total-output-tokens": 7404, "total-fallback-pages": 0}, "attributes": {"pdf_page_numbers": [[0, 5509, 1], [5509, 12423, 2], [12423, 15259, 3], [15259, 20287, 4], [20287, 26965, 5], [26965, 28515, 6]], "primary_language": ["en", "en", "en", "en", "en", "en"], "is_rotation_valid": [true, true, true, true, true, true], "rotation_correction": [0, 0, 0, 0, 0, 0], "is_table": [false, false, false, false, false, false], "is_diagram": [false, false, true, false, false, false]}}
{"id": "dcd9af8b1d1966924b89564a01c3071755b71a23", "text": "A Multilingual Platform for Building Speech-Enabled Language Courses\n\nManny Rayner\u00b9, Pierrette Bouillon\u00b9, Nikos Tsourakis\u00b9, Johanna Gerlach\u00b9\nClaudia Baur\u00b9, Maria Georgescul\u00b9, Yukie Nakao\u00b2\n\n\u00b9 University of Geneva, TIM/ISSCO,\n40 bvd du Pont-d\u2019Arve, CH-1211 Geneva 4, Switzerland\n\u00b2 LINA, Nantes University,\n2, rue de la Houssini\u00e8re, BP 92208 44322 Nantes Cedex 03\n{Emmanuel.Rayner,Pierrette.Bouillon,Nikolaos.Tsourakis,Johanna.Gerlach}@unige.ch,\nMaria.Georgescul@unige.ch, baur5@etu.unige.ch, yukie.nakao@univ-nantes.fr\n\nAbstract\n\nWe present CALL-SLT, a generic multilingual speech-enabled Open Source CALL system based on the \u201ctranslation game\u201d idea of Wang and Seneff, focussing on recent enhancements which allow the instructor to define a structured language course divided up into a set of lessons. Each lesson picks out a subset of the corpus using a combination of semantic and syntactic constraints. We describe how the \u201cstructured lesson\u201d framework interacts with the spoken help facilities offered by the system, and outline the initial sets of lessons we have constructed for the English, French and Japanese versions of CALL-SLT.\n\nIndex Terms: CALL, speech recognition, translation, interlingua, online help, English, French, Japanese\n\n1. Introduction\n\nAs everyone knows, it is almost impossible to achieve any fluency in a foreign language without conversational practice; the most effective way to pick up a language is to spend time in a country where it is spoken, or, failing that, to talk regularly with a native speaker. Unfortunately, neither of these options are available for many language students. It is consequently interesting to explore techniques for creating automatic conversation partners. There is a continuum here with respect to the degree of free variation permitted on the student\u2019s part. At one extreme, which represents current commercial mainstream systems like TellMeMore and RosettaStone\u00ae, we have \u201cclosed-response\u201d systems [1]. The system indicates to the student precisely what they are supposed to say; the student repeats it, and is then graded on their pronunciation. Though undoubtedly useful, this is less than ideal. As pointed out in [2], effective systems for language learning need to allow the learner to produce large quantities of sentences on their own, something that is, by definition, impossible to realise in a closed response application.\n\nAt the other extreme, one can try to build a fully interactive system, which carries out a genuine conversation with the student in some kind of simulated environment; a high-profile example is TLCTS [3]. It is, however, extremely challenging to make a system of this kind adequately robust, and in particular to implement sufficiently powerful language understanding. The system we describe here, CALL-SLT [4], explores an intermediate solution. This has its roots in the \u201ctranslation game\u201d idea of Wang and Seneff [5], who successfully reused speech and language technology developed at MIT under other projects [6] to build a speech-enabled game for students who wished to practise Chinese. In their game, the system shows English sentences to the student, who has to respond with a spoken Chinese translation. The system matches the student response against the original prompt, and produces informative feedback. Most of the subjects who participated in the initial study were positive about the system.\n\nCALL-SLT uses a similar basic strategy, though many of the details are different; in particular, we use another approach to speech recognition, present prompts to the student in a more principled way, and include a help system which allows students to share experience across languages. In Section 2, we briefly present more background on the system. The rest of the paper describes new enhancements not described in previous publications, which make it possible to organise the corpus of examples used by the system as a set of structured lessons, each one organised around a specified syntactic or semantic theme. We present the \u201clesson structure\u201d framework and outline the initial sets of lessons we have built for the English, French and Japanese versions of CALL-SLT.\n\n2. The CALL-SLT System\n\nCALL-SLT is an Open Source speech-based CALL application for beginning to intermediate-level language students who wish to improve their spoken fluency. The system runs on a medium-range Windows laptop; it can also be deployed on a mobile platform, using the client/server architecture described in [7], with performance identical to that of the laptop version. The current version uses a restaurant domain, and supports English, French, Japanese, Swedish, Arabic and German as L2s, with English or French as the L1. Vocabulary varies from around 150 to around 500 words per language, and covers basic situations such as reserving a table, ordering food and drink, asking for the bill, and so on. Table 1 shows typical examples of coverage.\n\nCALL-SLT leverages earlier work on Regulus, a platform for building systems based on grammar-based speech understanding [8] and MedSLT, an interlingua-based speech translation framework [9, 10], to develop a generic CALL platform centered on the \u201cspoken translation game\u201d idea. Our initial experiences, including an extensive test carried out on several hundred Swiss high-school students [4], have demonstrated that the Regulus/MedSLT architecture is a good fit to this type of application.\n\n1 tellmemore.com; rosettastone.com.\n2 Versions with Japanese L1 and Greek L2 are in preparation.\nIn particular, the grammar-based approach to recognition gives a response profile with accurate recognition on in-grammar utterances and poor or no recognition on out-of-grammar utterances, automatically giving the student feedback on the correctness of their language usage. Also, the platform\u2019s rapid development facilities, based on semi-automatic specialisation of general resource grammars, have made it easy to create good speech recognisers for our initial domain (a tourist restaurant scenario), despite the very limited availability of training data. Although the recognisers for the various L2 languages are all built from development corpora of at most a few hundred examples, native speakers typically get per-sentence semantic error rates of under 10%.\n\nTwo other differences between CALL-SLT and the MIT system are also worth highlighting. First, one of the main weaknesses of Wang\u2019s and Senefeld\u2019s work is that prompts are in the student\u2019s own language (the L1). This has the undesirable effect of tying the language being studied (the L2) too closely to the L1 in the student\u2019s mind, and is quite contrary to mainstream theories of language acquisition. Instead of prompting student with sentences in the L1, our system shows them interlingua representations; these are created using semantic grammars based on our previous work on human-readable representations of interlingua [11].\n\nSecond, instead of focussing on a single language pair, we think of the problem more broadly as an activity in the multilingual language learning community. We structure learning activities so as to encourage students to contribute data both in the L1 and in the L2. Each student\u2019s recorded native speaker data is used as a resource to help other students studying that language.\n\n| English                                      | French                                      | Japanese                                      |\n|----------------------------------------------|---------------------------------------------|-----------------------------------------------|\n| I would like a mint tea                      | Puis-je avoir une bi\u00e8re                     | Biiru nihai onegai shi masu                  |\n| A tea and a coffee please                    | J\u2019aimerais du fromage r\u00e2p\u00e9                   | (I would like two beers)                      |\n| Do you have a table for four people          | Je voudrais une table dans le coin           | Madogawa no sekai wa animasu ka              |\n| Could I reserve a table for seven thirty     | Est-ce que je pourrais voir le menu         | (Is there a table by the window)             |\n| Do you accept credit cards                   | (Could I see the menu)                       | Betsubetsu ni haraemasu ka                   |\n|                                              |                                             | (Can we pay separately)                      |\n|                                              |                                             | Hachi ji han kara futari no teeburu wo yoyaku |\n|                                              |                                             | shitai no desu ga                            |\n|                                              |                                             | (I would like to reserve a table for two people for half past eight) |\n\nTable 1: Examples of CALL-SLT coverage in the restaurant domain, for English, French and Japanese.\n\nIn more detail, the game that forms the basis of CALL-SLT is as follows. The system is loaded with a set of possible prompts, created by translating the development corpus into the interlingua. Each turn starts with the student asking for the next prompt. The system responds by showing her a surface representation of the underlying interlingua for the sentence they are supposed to produce in the L2. This representation can either be textual or pictorial. For example, a student whose L1 is French and whose L2 is English might be given the textual prompt\n\nCOMMANDER DE MANIERE POLIE SOUPE\n\nor the graphical prompt shown in Figure 1. In both cases, an appropriate response would be something like \u201cCould I have the soup?\u201d, \u201cI would like some soup\u201d, or simply \u201cSoup, please\u201d; the grammar supports most of the normal ways to formulate this type of request.\n\nThe student decides what she is going to say, presses the \u201crecognise\u201d button, and speaks. The system performs speech recognition using a Nuance 8.5 recognition package compiled from a grammar-based language model, translates the result into the interlingua, matches it against the underlying interlingua representation of the prompt, gives the student feedback on the match, and adjusts the level of difficulty up or down. If the match was successful, the student\u2019s recorded speech is also saved for future use.\n\nThe student may ask for help at any time. The system can give help either in speech or text form. Text help examples are taken from the original corpus, and can also be produced by translating from the interlingua back into the L1; speech help examples are created by recording successful interactions, or by doing TTS on text examples.\n\n3. Constructing language courses in CALL-SLT\n\nA frequent comment from early users of CALL-SLT has been that the system would be more useful if it included structured language exercises. Over the last few months, we have extended...\nthe platform to include a framework to support this type of functionality. The basic idea is simple: we allow the course designer to divide up the set of examples into a number of possibly overlapping subsets, each one defined by a list of syntactic and semantic criteria. We call a grouping of this kind a lesson. At runtime, the student sees a menu of available lessons, and is able to navigate between them using a menu. Each lesson is associated with a page of explanation, which covers the topic or topics that it introduces.\n\nInitially, we had planned to define the content of lessons in terms of semantic properties; for example, we might have a lesson that focussed on time expressions, or on numbers. A strategy of this kind can easily be implemented by defining constraints on the interlingual representations associated with the examples. This strategy did indeed seem appropriate for languages like English and Japanese, which have relatively simple syntax. French syntax, however, is considerably more challenging, with concepts like grammatical gender, agreement and verb inflection playing a crucial role; it also turned out to be useful to have the option of including lexical constraints.\n\nAlthough this complicated the architecture of the system, we decided to allow lesson content to be defined using any Boolean combination of semantic, syntactic and lexical constraints. A lexical constraint is implemented simply as a requirement that a specific sequence of words should be present in the surface string; similarly, a semantic constraint is a requirement that a given, possibly partially instantiated, structure should match some part of the interlingua representation.\n\nThe least trivial question was how to permit definition of syntactic constraints. After some experimentation, we decided that we could implement a sufficiently expressive framework by defining a syntactic constraint $S$ to be a partially instantiated syntactic category $C_S$. We parse each example $E$ using the feature grammar which forms the basis for the recogniser\u2019s language model (cf. [8]), and extract all the syntactic categories $C(E)$ from the analysis tree. We then say that $E$ has syntactic property $S$ if there is at least one $C(E)$ which unifies with $C_S$.\n\nIn the French version, the framework lets us define constraints like \u201cuses inverted word order\u201d, \u201cincludes an adjective\u201d or \u201cincludes a verb in infinitive form\u201d; for example, the first of these constraints is coded as a match against the syntactic category $\\text{vp} : [\\text{inv}=inverted]$. Similarly, in the Japanese version, we can define constraints like \u201cincludes a counter\u201d or \u201cuses the plain form of a verb\u201d.\n\nAt system build time, each help example is analysed to determine the set of lessons it matches, as follows. Recorded spoken help examples are first replaced by their transcripts, and the text form of the example is parsed to produce an analysis tree and a semantic representation. Syntactic categories are then extracted from each parse tree, while the semantic representation is converted into interlingual form. Finally, the set of syntactic and semantic constraints associated with each lesson is matched against the extracted information, and the result is cached.\n\nIt is important that the help system only offers help appropriate to the current lesson, since there will in general be multiple help examples for any given prompt. For example, suppose in the French version that the prompt is\n\n**ORDER POLITELY SOUP**\n\nIn an early lesson, where the theme is to learn to ask for things in as simple a way as possible and practise using singular nouns, the help example might be a recording of *Je voudrais la soupe* (\u201cI would like the soup\u201d). In a later lesson, where the theme is making requests using questions, the help example might be *Puis-je avoir la soupe?* (\u201cCould I have the soup?\u201d). Similar considerations apply in Japanese. In an early lesson, a help example for something like\n\n**ASK-FOR POLITELY TABLE 2 PERSON**\n\nwill be formed using the basic requesting construction... *onegai shimasu*, while in a later one it might use the more formal ... *ga arimasu ka* or ... *-kai no desu ga*.\n\nAn interesting point arises when the user response is semantically correct, but fails to obey the constraints associated with the current lesson. Continuing the French example immediately above, suppose that the lesson is \u201csimple requests using singular nouns\u201d, and the student is given the prompt above. If she replies *Puis-je avoir la soupe?*, her response is semantically correct (it will produce the correct interlingua), but it fails to match the current syntactic constraints. We considered the idea of warning the student in these circumstances, but this strategy seems in practice overly strict; our observation is that it can confuse students, particularly when it is inappropriately applied due to a recognition error. In the current version of the system, students are allowed to respond using any valid syntactic form, irrespective of whether or not it conforms to the theme of the lesson.\n\n### 3.1. Initial lesson structures\n\nWe have implemented initial sets of lessons for English, French and Japanese. As already noted, the very different structures of these three languages mean that the lesson structure differs significantly from language to language. English and Japanese have relatively simple grammars, and this is reflected in an arrangement primarily organised according to semantic/pragmatic considerations. The English version of the system currently has five lessons, as follows:\n\n```\nlesson([lesson_id=singular_nouns,\n        constraints=[request=yes,\n                     fr_singular_noun=yes,\n                     fr_adjective=no,\n                     fr_voudrais_only=yes,\n                     fr_infinitive=no,\n                     fr_time=no,\n                     food_and_drink=yes,\n                     french_number=no,\n                     de=no,\n                     du=no],\n        help_file='sing_nouns_help.txt']\n       ).\n\nlesson([lesson_id=times,\n        constraints=[request=yes,\n                     fr_time=yes,\n                     fr_inf_libre=yes,\n                     person=no,\n                     french_loc=no],\n        help_file='time_help.txt']\n       ).\n```\n\nFigure 2: Two examples of French lesson definitions. The format has been slightly simplified for expositional reasons.\n1. Greetings and politeness (\u201chello\u201d, \u201cgood evening\u201d, \u201cthank you\u201d, etc).\n2. Asking for things (\u201cI would like\u201d + a noun phrase)\n3. Asking for things using questions (\u201cCould I have/do you have\u201d + a noun phrase)\n4. Numbers (\u201cI would like two beers/a table for three people/etc\u201d)\n5. Times (\u201cI would like a table for six o\u2019clock/half past six/quarter to seven/nineteen hundred/etc\u201d)\n\nThe set of Japanese lessons is similar to the English one. Syntax, however, plays a larger role in French; although we still have lessons based on themes similar to those in the English and Japanese systems, several more are organized explicitly around syntactic issues:\n\n1. Singular nouns. Simple requests involving only singular nouns, e.g. Je voudrais le lapin (\u201cI would-like the rabbit\u201d).\n2. Plural nouns. Requests involving plural nouns and the future tense, e.g. Je prendrai les fraises (\u201cI will-take the strawberries\u201d).\n3. Compound nominals. Noun phrases with de or \u00e0, e.g. Je prendrai les fruits de mer (\u201cI will-take the seafood\u201d).\n4. Adjectives. French adjectives agree in number and gender, e.g. Je voudrais un steak bien cuit (\u201cI would-like a-MASC steak-MASC well done-MASC\u201d)\n5. Requests using questions. More complex ways to phrase requests, e.g. Auriez-vous une bi\u00e8re (\u201cMight you have a beer?\u201d) or Quels vins recommandez-vous? (\u201cWhat wines do you recommend?\u201d)\n6. Infinitives. Requests using the infinitive form, e.g. Puis-je avoir une bi\u00e8re? (\u201cCan I have-INF a beer?\u201d)\n\nFigure 2 shows examples of two French lesson definitions, for singular nouns and times respectively. The first is intended to be done early in the course, so most non-trivial constructions are blocked; the second is intended to be done near the end, so most constructions are allowed.\n\n4. Summary and further directions\n\nWe have presented an overview of the CALL-SLT translation game/conversation partner, focussing on recent work where we have introduced a framework that permits the instructor to divide up material into a structured set of lessons. We have only just begun to experiment with this new functionality, and it is still very much under development. It is, unfortunately, not at all easy to evaluate CALL systems in a fully objective way [12]; the question we really wish to address is whether they help students learn, and this requires an elaborate methodology where a group using the system is contrasted against a similar one that is not doing so. We are currently working on an Internet-enabled version of CALL-SLT, which we expect to have operational by Q3 2010. This should make it much easier to perform evaluation experiments.\n\nIt is likely that we will by then also have elaborated the currently very simple lesson structure framework. At a minimum, we will certainly have extended the existing set of lessons, and implemented lesson plans for some of the other CALL-SLT languages, in particular German and Arabic. We are also considering experimenting with some more ambitious ideas; a particularly interesting one is to provide the student with an interface that allows them to define their own lessons, so that they can practise a specific topic or set of topics, while excluding others. We will report on further progress at the workshop, where we will also be able to demo the system.\n\n5. References\n\n[1] F. Ehsani and E. Knott, \u201cSpeech technology in computer-aided language learning: Strengths and limitations of a new call paradigm,\u201d Language Learning and Technology, vol. 2(1), pp. 45\u201360, 1998.\n[2] H. Chen, \u201cEvaluating five speech recognition programs for ESL learners,\u201d in Papers from the TNEMLT 2001 Conference, 2001.\n[3] W. Johnson, \u201cSerious use of a serious game for language learning,\u201d Artificial Intelligence in Education: Building Technology Rich Learning Contexts that Work, p. 67, 2007.\n[4] M. Rayner, P. Bouillon, N. Tsourakis, J. Gerlach, M. Georgescul, Y. Nikao, and C. Baug, \u201cA multilingual call game based on speech translation,\u201d in Proceedings of LREC 2010, Valetta, Malta, 2010, http://www.iscco.unige.ch/pub/trec2010/callslt.pdf.\n[5] C. Wang and S. Seneff, \u201cAutomatic assessment of student translations for foreign language tutoring,\u201d in Proceedings of NAACL/HLT 2007, Rochester, NY, 2007.\n[6] D. Goddeau, E. Brill, J. Glass, C. Rto, M. Phillips, J. Polifroni, S. Seneff, and V. Zue, \u201cGalaxy: A human-language interface to on-line travel information,\u201d in Proceedings 3rd International Conference on Spoken Language Processing (ICSLP), Yokohama, Japan, 1994.\n[7] N. Tsourakis, M. Georgescul, P. Bouillon, and M. Rayner, \u201cBuilding mobile spoken dialogue applications using Regulus,\u201d in Proceedings of LREC 2008, Marrakesh, Morocco, 2008.\n[8] M. Rayner, B. Hockey, and P. Bouillon, Putting Linguistics into Speech Recognition: The Regulus Grammar Compiler. Chicago: CSLI Press, 2006.\n[9] P. Bouillon, M. Rayner, N. Chatzidirafisi, B. Hockey, M. Santaholma, M. Starlander, Y. Nikao, K. Kanzaki, and H. Ishihara, \u201cA generic multi-lingual open source platform for limited-domain medical speech translation,\u201d in Proceedings of the 10th Conference of the European Association for Machine Translation (EAMT), Budapest, Hungary, 2005, pp. 50\u201358.\n[10] P. Bouillon, G. Flores, M. Georgescul, S. Halimi, B. Hockey, H. Ishihara, K. Kanzaki, Y. Nakao, M. Rayner, M. Santaholma, M. Starlander, and N. Tsourakis, \u201cMany-to-many multilingual medical speech translation on a PDA,\u201d in Proceedings of The Eighth Conference of the Association for Machine Translation in the Americas, Waikiki, Hawaii, 2008.\n[11] P. Bouillon, S. Halimi, Y. Nakao, K. Kanzaki, H. Ishihara, N. Tsourakis, M. Starlander, B. Hockey, and M. Rayner, \u201cDeveloping non-European translation pairs in a medium-vocabulary medical speech translation system,\u201d in Proceedings of LREC 2008, Marrakesh, Morocco, 2008.\n[12] J. Nerbonne, \u201cNatural language processing in computer-assisted language learning,\u201d in Handbook of Computational Linguistics, R. Mitkov, Ed. Oxford University Press, 2003, pp. 670\u2013698.", "source": "olmocr", "added": "2025-09-29", "created": "2025-09-29", "metadata": {"Source-File": "tests/gnarly_pdfs/large_prompt_hint3.pdf", "olmocr-version": "0.3.4", "pdf-total-pages": 4, "total-input-tokens": 6456, "total-output-tokens": 5157, "total-fallback-pages": 0}, "attributes": {"pdf_page_numbers": [[0, 5538, 1], [5538, 10956, 2], [10956, 17384, 3], [17384, 23344, 4]], "primary_language": ["en", "en", "en", "en"], "is_rotation_valid": [true, true, true, true], "rotation_correction": [0, 0, 0, 0], "is_table": [false, false, false, false], "is_diagram": [false, false, false, false]}}
{"id": "32c6393c57be3cdcb2644ae2ef83612e8649b07d", "text": "RESEARCH ARTICLE\n\nCoupled ultradian growth and curvature oscillations during gravitropic movement in disturbed wheat coleoptiles\n\nRenaud Bastien1,2*, Olivia Guayasamin1,2,3, St\u00e9phane Douady4, Bruno Moulia5\n\n1 Department of Collective Behaviour, Max Planck Institute for Ornithology, Konstanz, Germany, 2 Department of Biology, University of Konstanz, Konstanz, Germany, 3 Department of Ecology and Evolutionary Biology, Princeton University, Princeton, United States of America, 4 Mati\u00e8re et Syst\u00e8mes Complexes, Universit\u00e9 Paris-Diderot, 75205 Paris Cedex 13, France, 5 UCA, INRA, UMR PIAF, 63000 Clermont-Ferrand, France\n\n* These authors contributed equally to this work.\n* rbastien@orn.mpg.de\n\nAbstract\n\nTo grow straight and upright, plants need to regulate actively their posture. Gravitropic movement, which occurs when plants modify their growth and curvature to orient their aerial organ against the force of gravity, is a major feature of this postural control. A recent model has shown that graviception and proprioception are sufficient to account for the gravitropic movement and subsequent organ posture demonstrated by a range of species. However, some plants, including wheat coleoptiles, exhibit a stronger regulation of posture than predicted by the model. Here, we performed an extensive kinematics study on wheat coleoptiles during a gravitropic perturbation (tilting) experiment in order to better understand this unexpectedly strong regulation. Close temporal observations of the data revealed that both perturbed and unperturbed coleoptiles showed oscillatory pulses of elongation and curvature variation that propagated from the apex to the base of their aerial organs. In perturbed coleoptiles, we discovered a non-trivial coupling between the oscillatory dynamics of curvature and elongation. The relationship between those oscillations and the postural control of the organ remains unclear, but indicates the presence of a mechanism that is capable of affecting the relationship between elongation rate, differential growth, and curvature.\n\nIntroduction\n\nPlants are living organisms that have long been observed to adaptively regulate their shape and movement in order to optimize their physical performance. The best-known example of an adaptive plant response is phototropism, which describes the ability of plants to track sunlight in order to maximize photosynthesis. While phototropism often results in plants growing upwards toward the sun, it is not the only mechanism by which plants can achieve upward orientation and growth. In fact, many plants exhibit gravitropism and can spatially orient their organs with the gravitational field [1, 2], yielding roots that grow downward in direction of...\ngravity and stems elongating upwards counter to gravitational pull. In organs undergoing primary growth, gravitropism, phototropism, and other plant tropisms result from an asymmetrical distribution of auxin in the elongation zone of these organs [2\u20134]. The unequal distribution of auxin in growth regions causes a difference in growth rate between opposite sides of the plant organ, resulting in a curvature (Fig 1) that orients the plant organ toward a salient stimulus [3, 5\u20137].\n\nStudies on the kinematics of gravitropic movement in plants have largely neglected the aerial organs, instead focusing on roots as they are less affected by phototropism [10\u201312]. In roots, graviception occurs only in the root cap, which transmits a growth signal to the underlying elongation zone. Consequently, the regulation of the movement is limited to the apical part [13].\n\nIn contrast to roots, both perception and movement regulation are possible along the entire length of the aerial stem [5, 13, 14]. Because they are not embedded within a substrate, unlike\n\n---\n\n**Fig 1.** Straightening movement of a wheat coleoptile, in the standard reading direction. The white line is a 10 mm reference. The time between each frame is 150 minutes. The orange points on the coleoptile are the fluorescent markers used for the measurement of growth. Movies of all plants are available online [8, 9].\n\nhttps://doi.org/10.1371/journal.pone.0194893.g001\nroots these freestanding aerial organs require internal mechanisms to regulate their posture and spatial orientation in the absence of light. In order to consistently grow straight upwards, aerial organs must exhibit both graviception and proprioception, the ability of plants to perceive their own shape and respond accordingly [2, 14, 15]. These two perceptions have different effects on plant movement and shape: graviception tends to increase the curvature of the organ and enable it to reach vertical, while proprioception causes plants to modify their growth in order to remain straight [14]. Aerial organs must, therefore, balance the effects of graviception and proprioception in order to successfully grow upwards against the force of gravity. For these reasons, studying gravitropism in plant aerial organs provides a unique opportunity to understand how plants integrate multi-sensory information and regulate adaptive growth and movement.\n\nRecently, the process of gravitropic movement in plant aerial organs has been formalized in a unifying model called the \u201cAC model\u201d [5, 14], where the dynamics are expressed through the additive (but opposing) effects of graviception and proprioception. Comparison with experiment data demonstrated that this model is able to explain the complex kinematics of gravitropism in at least eleven species covering a broad taxonomic range of angiosperms, habitats, and aerial organ types, suggesting that it captures a fundamental regulatory process of plant tropism [5, 14]. However, many plants seem to present a more comprehensive regulation of gravitropic movement that current described by the AC model. In particular, this model tends to overestimate the likelihood that aerial organs will \u201covershoot\u201d the vertical. One reason for the failure to include this additional regulatory behavior in the AC model may be that this regulatory mechanism can not be properly observed without clear and complete observations of plant movement, and a complete plant kinematics analysis is often not quantified or reported. Measurements of plant movement that focus on the first instants of the gravitropic reaction [16\u201318], or restrict analysis to the movement of the apical tip alone [17\u201319], give an incomplete picture of the kinematics of gravitropic movement and are insufficient for understanding its regulation [3, 13, 14, 20].\n\nTo discover the additional movement regulations that prevent plants from overshooting the vertical, we recorded the complete kinematics of wheat (*Triticum aestivum*) coleoptiles during a gravitropic experimental study. Wheat coleoptiles were chosen as our model system because they can be grown in absence of light, eliminating the concern of phototropic effects. Additionally, it has been observed that they rarely overshoot the vertical [5], making them likely candidates for detecting a mechanism that prevents overshoots. After allowing seeds of wheat to germinate in a vertical position until they matured into coleoptiles, individual plants were subjected to one of two spatial reorientation conditions: no spatial reorientation (vertical) or 90\u00b0 reorientation (horizontal). Their movements were then observed for 24 hours.\n\nThroughout the observation period we recorded and quantified the growth and structure of the entire coleoptile with KymoRod, a new tool developed to extract the complete kinematics of an aerial organ in movement [21]. Using this approach, we compared the kinematics of disturbed and undisturbed coleoptiles in order to discover the mechanism responsible for the regulation of gravitropic movement beyond what is included in the AC model. As these dynamics are not yet described or defined in the current formulation of the AC model, we further seek to do so here.\n\n**Materials and methods**\n\n**Coleoptile preparation and general methods**\n\nSeeds of recital wheat (*Triticum aestivum*) were immersed in water for 6 hours to initiate germination, then each seed was attached to a plastic test tube filled with cotton and water.\nBecause wheat coleoptiles do not sprout vertically from the seed\u2019s longitudinal axis, all seeds were adhered at a 45\u00b0 angle to ensure that coleoptiles would grow vertically with minimal initial curvature. After being attached to test tubes, all seeds were put in a darkroom to germinate for 3 to 4 days until coleoptiles were 10\u201320mm long. Each coleoptile was then dusted with an orange, non-toxic, fluorescent dry painting pigment (Sennelier 648), leaving \u201ctracer\u201d particles on the coleoptile surface that were later used for extracting kinematics (Fig 2).\n\nPrepared coleoptiles were transferred to an experimental darkroom, positioned 80 cm in front of a camera (Olympus SP-550UZ or SP-560UZ), and oriented in profile to the camera lens such that maximum curvature was recorded and no part of the coleoptile structure was obscured by the seed. Photographs were taken every 15 minutes during a 24 hours period, with the camera\u2019s flashlight covered by a \u201csafe\u201d green light filter (Lee 139 Primary Green). Preliminary experiments showed that neither the pigment markers nor the flash altered any aspects of coleoptile movement and growth.\n\n**Experimental procedure**\n\nEach coleoptile was randomly assigned to one of two treatment groups. In the tilted group, immediately prior to recording, coleoptiles were reoriented from the vertical at a 90\u00b0 angle (horizontal) and kept in that position for the duration of the experiment. Coleoptiles assigned to the straight (untilted) group were remained vertical, aligned with the direction of the gravity field. This second group served as a control to monitor how the aerial organ would grow without gravitropic perturbation.\nMorphometric balance number\n\nIn the AC model, the dynamics of aerial stem movement are represented by a unique dimensionless number, $B$ the \u201cbalance number\u201d\n\n$$ B = \\frac{\\beta L_{\\text{eff}}}{\\gamma} $$  \\hspace{1cm} (1)\n\nwhere $L_{\\text{eff}}$ is the effective length of the organ. If the length of the organ $L$ is less than the length of the growth zone ($L_{\\text{gz}} > L$) at the time before stimulation $L(t = 0)$, then $L_{\\text{eff}} = L$. In contrast, if ($L_{\\text{gz}} < L$) at $L(t = 0)$, then $L_{\\text{eff}} = L_{\\text{gz}}$ (see Fig 3 for a full visual depiction). The number $B$ expresses the ratio between graviception, $\\beta$, and proprioception $\\gamma$, scaled to the length of the organ that can move.\n\nExtracting coleoptile kinematics\n\nFor each coleoptile, the KymoRod software [21] was used to extract movement kinematics from the images recorded during the experiment. From every image taken at time $t$, KymoRod extracted the total length of the coleoptile organ $L(t)$, and determined each position $s$ along the length of the organ from base to apex. For each position $s$, the organ\u2019s orientation from the vertical $A(s, t)$ was computed in radians (see Fig 3).\n\nThe curvature of the organ $C(s, t)$ was then calculated with a spatial derivation of the organ\u2019s orientation from vertical as shown:\n\n$$ \\frac{\\partial A(s, t)}{\\partial s} = C(s, t) $$  \\hspace{1cm} (2)\n\nTo fully describe the kinematics, the curvature variation $\\frac{DC(s,t)}{Dt}$ was computed in order to account for organ deformation and elongation [2, 3, 5]. $\\frac{DC(s,t)}{Dt}$ was calculated using the material\n\nFig 3. Geometric description of the organ. We define a set of coordinates $(x, y)$ in the plane that intersects with the organ. The vertical direction $y$ is aligned with the gravity field. The median line of an organ of total length $L$ is defined by its curvilinear abscissa $s$, with $s = 0$ referring to the apex and $s = L(t)$ referring to the base. In an elongating organ, only the part inside the growth zone, of length $L_{\\text{gz}}$ from the apex, is able to curve (with $L_{\\text{gz}} = L$ at early stages and $L_{\\text{gz}} < L$ later on [5]). The local orientation of the organ $A(s, t)$ is defined at each point along the median with respect to the vertical. The angle is computed in radians so that a vertical upwards orientation is given by $A(s, t) = 0$ and an horizontal orientation by $A(s, t) = \\pi/2$. Two curves are represented here with the same apical angle $A(0, t) = 0$ but different shapes. The measurement of $A(s, t)$ along the entire median line is necessary to specify the full shape. The angle $A(s, t)$ is a zenith angle, zero when the organ is locally vertical and upright. Clockwise angles are considered positive.\n\nhttps://doi.org/10.1371/journal.pone.0194893.g003\nderivative $\\frac{D}{Dt}$ co-moving with each element of the organ derivative. The material derivative of the local variable $C(s, t)$ is therefore given by:\n\n$$\\frac{DC(s, t)}{Dt} = \\frac{\\partial C(s, t)}{\\partial t} + \\frac{\\partial C(s, t)}{\\partial s} \\int_0^s \\dot{E}(s', t) ds'$$\n\n(3)\n\nwhere the sign of $\\frac{DC(s, t)}{Dt}$ describes the direction of curvature relative to the vertical and $\\dot{E}(s, t)$ is the relative elongation growth rate (REGR) in the direction of the main axis of the organ. $\\dot{E}(s, t)$ was determined using subpixelar displacement mapping function based on digital image correlation [21] which works by comparing target features from sets of digital images. At each position $s$ along the length of the organ, we quantified REGR by applying a focal moving window that identified unique patterns of fluorescent markers and assessed marker displacement over time by comparing corresponding windows from sequential images. To yield a single value of elongation growth and curvature variation per coleoptile, we calculated the temporal averages of $\\dot{E}(s, t)$ and $\\frac{DC(s, t)}{Dt}$ based on the absolute values of the entire set of kinematic extracted from each coleoptile. To compare between the dynamics just after gravitropic perturbation and after the plants has reached some potential gravitropic equilibrium, those values are compared before and after an ad-hoc time of 12 hours.\n\nCalculating the balance number $B$\n\nFor all coleoptiles in the tilted condition, the balance number $B$ was extracted through morphometric measurement as detailed in [14],\n\n$$B = \\frac{L_{eff}}{L_c}$$\n\n(4)\n\nwhere $B$ represents the ratio between the effective length of the growth zone $L_{eff}$ and the length of the curved zone $L_c$ at the end of the experiment when no variation of curvature is observed $\\frac{DC(s, t)}{Dt} = 0$. By calculating $B$ based on initial morphometrics, we predicted which coleoptiles would ultimately overshoot the vertical. We demonstrated that plants with $B > 2.8$ should display an overshoot during the gravitropic movement [14]. Because $B$ is a measure of the gravitropic movement, it cannot be calculated for coleoptiles in the straight and vertical condition.\n\nCharacterizing oscillations\n\nThe relative elongation growth rate $\\dot{E}(s, t)$ and the curvature variation $\\frac{DC(s, t)}{Dt}$ were represented on spatiotemporal kymographs. Thresholding was used to identify the positions of oscillation maxima and minima. The oscillation period $T_p$ was defined as the time $T$ between $n$ non-successive peaks (maxima) as shown in:\n\n$$T_p = \\frac{T}{n}$$\n\n(5)\n\nThe velocity of these oscillation \u201cpulses\u201d was determined by first fitting a line that followed the position of each oscillation maximum (Fig 4). We consider that the position, $P_{t_0}(t)$, of a local maxima traveling along the organ, starting at $t = t_0$ for $s = 0$, can be described by a linear equation\n\n$$P_{t_0}(t) = v_p(t - t_0)$$\n\n(6)\nFig 4. An idealized propagating wave, \\( f(s, t) = \\sin \\left( \\frac{s}{v_p} + \\frac{t}{T_p} \\right) \\). The values of the function \\( f(s, t) \\) with respect to time \\( t \\) and curvilinear abscissa \\( s \\).\n\nhttps://doi.org/10.1371/journal.pone.0194893.g004\n\nThe pulse velocity is then given by\n\n\\[\nv_p = \\frac{P_{t_0}(t)}{t + t_0}\n\\]  \n\n(7)\n\nData analysis\n\nAll statistical and image analyses were conducted in MATLAB (v. 9.0 R2016a, Mathworks Inc.). After calculating the balance number \\( B \\) for each coleoptile in the tilted group, we compared overshoot model predictions [14] to actual experimental data using Fisher\u2019s Exact test to quantify if the model was accurately able to predict coleoptile overshoot. We tested for differences between coleoptiles in the tilted and straight experimental treatments using Mann-Whitney U tests (non-parametric Student t-tests) and compared: the oscillatory periods, velocity of oscillatory pulses, and temporal averages, of both elongation growth rate \\( E(s, t) \\) and curvature variation \\( \\frac{DC(s, t)}{Dt} \\). To uncover if oscillations in elongation growth and curvature variation were somehow related, and if this relationship depended on tilting treatment, we calculated the image correlation statistic \\( r \\) between these two oscillation kymographs for each coleoptile. We then compared the distributions of \\( r \\) from coleoptiles in the straight and tilted treatments with a Mann Whitney U tests. Movies of all plants analyzed are available online [22, 23].\n\nResults\n\nFull movement dynamics were extracted from 62 coleoptiles in the straight condition, and 54 coleoptiles in the tilted condition. The unequal sample size is due to several coleoptiles\nbecoming \u201cpierced\u201d by the plan\u2019s initial leaf within the recording time-frame of the experiment (see [8, 9]). As the piercing stops any movement and growth dynamics of the coleoptile, data from these individuals was discarded.\n\n**Description of movement patterns**\n\nThe straightening movement of a tilted wheat coleoptile follows the generic pattern of gravitropic movement previously formalized in the AC model [14]. After being tilted, the coleoptile initially responds by curving the entire aerial organ towards the vertical. Once the tip or apex of the coleoptile has reached the vertical, a process that take anywhere from 1 to 3 hours, the curvature concentrates near the base of the aerial organ while the remainder of the coleoptile continues to elongate along the vertical (Fig 5).\n\n**Growth regulation in wheat coleoptiles exceeds AC model predictions**\n\nFewer tilted coleoptiles overshot the vertical during our experiment ($n_{\\text{observed}} = 5$) than predicted by the AC model ($n_{\\text{predicted}} = 16$), both during responsive movement and in their final shape (Fig 6). Our Fisher\u2019s Exact test revealed that the difference between predicted and actual overshoots was significant ($n = 54$, $df = 1$, $p = 0.0069$, OddsRatio = 4.12, 95% CI [0.99, 17.28]).\n\n![Fig 5. Kinematics of gravitropic movement of two wheat coleoptiles (A-B from Fig 1). Shown as color maps (kymograph) A-C. the orientation $A(s,t)$ and B-D. the curvature with respect to time $t$ and curvilinear abscissa $s$. As the coleoptile is elongating, the area covered is increasing with the time. As before, the angle is measured from the vertical in radians. The curvature is measured in mm$^{-1}$.](https://doi.org/10.1371/journal.pone.0194893.g005)\nindicating that the tilted coleoptiles in this experiment possess a regulatory mechanism of gravitropic movement that is currently unrepresented in the AC model.\n\n**Whole-plant kinematics: Relative elongation growth rate**\n\nThe tilting manipulation did affect elongation growth rate with straight coleoptiles having a slightly higher average growth rate than tilted coleoptiles (Med. Straight = $1.0 \\times 10^{-5}$ s$^{-1}$, Med. Tilted = $9.3 \\times 10^{-6}$ s$^{-1}$, $U = 2896$, $p = 0.019$) (Fig 7). As evidenced by the kymographs shown in Fig 8, elongation growth rate showed a pattern of oscillation, with growth peaks passing through the aerial organ in waves. However, there was no difference in the average duration (period) of oscillations (Med. Straight = 2.9h, Med. Tilted = 2.8h, $U = 1084$, $p = 0.88$) and no difference in the velocity of oscillation pulses along the length of the plant organ (Med. Straight = 11.3 mm.s$^{-1}$, Med. Tilted = 12.3 mm.s$^{-1}$, $U = 2.64 \\times 10^4$, $p = 0.12$) between the straight and tilted coleoptile groups.\n\n**Whole-plant kinematics: Change in curvature**\n\nWhen measured up to 12h after stimulation, tilted coleoptiles had a significantly greater average absolute curvature variation than straight coleoptiles ($U = 11082$, $p = 3.2 \\times 10^{-4}$). Inside the growth zone, the magnitude of curvature variation is 2.56 \u00b1 .04 times greater in tiled...\ncoleoptiles compared to straight coleoptiles. However, after 12 hours, straight and tilted coleoptiles show similar absolute curvature distributions ($U = 10327$, $p = 0.09$) (Fig 9). Oscillation patterns were also present in kymographs of curvature variation (Fig 8). Between coleoptiles from the straight and tilted groups there were significant differences in oscillation period (Med. Straight = 2.8h, Med. Tilted = 3.0h, $U = 3709$, $p = 0.038$) and in the velocity of these pulses (Med. Straight = 14.1mm.s$^{-1}$, Med. Tilted = 16.6mm.s$^{-1}$, $U = 144624$, $p < 0.001$), with tilted coleoptiles demonstrating oscillations that were shorter and travelled more slowly along the aerial organ.\n\n**Tilted coleoptiles show correlated waves of elongation growth and curvature change**\n\nTo uncover if oscillations in elongation growth and curvature variation were somehow related, and if this relationship depended on tilting treatment, we calculated the image correlation statistic $r$ between these two oscillation kymographs for each coleoptile used in the study. While coleoptiles in the straight treatment showed no evidence of a relationship between oscillations in elongation growth rate and curvature variation on average, tilted coleoptiles demonstrated a significant relationship between the two oscillatory manifestations (Med. Straight = \u22120.026,\nMed. Tilted = \u22120.33, U = 1845, p < 0.001) (Fig 8). This relationship is described by the data as a moderately strong and negative, indicating an asynchronous regulatory mechanism that causes the oscillations of elongation growth and curvature variation to be shifted and slightly out of phase.\n\nDiscussion\n\nIn our sample of tilted coleoptiles, fewer coleoptiles over shot the vertical than predicted (Fig 4), suggesting the presence of additional gravitropic movement regulation currently undescribed by the AC model. Examining average measures of elongation growth rate, we found that straight coleoptiles had a slightly higher average REGR than those in the tilted group. When looking at a temporal plot of REGR over time (Fig 8), we observed that tilted plants had a slightly lower REGR at the beginning of the experiment, but that this difference quickly dissipated over time. This result is not surprising as tilting a plant disrupts the flow of the growth hormone auxin, causing a temporary reduction in elongation and growth [5]. When we compared average curvature variation between groups, we found a highly significant difference in curvature variation within the first 12 hours after perturbation, with tilted coleoptiles...\ndisplaying much higher values of curvature than controls. Given the nature of our gravitropic treatment, this difference was expected.\n\nCloser temporal examination of the morphometric data revealed pulses along the entire length of the aerial organ in elongation growth rate and variation of curvature over time (Fig 8). By tracking the maxima of these pulses over time, we observed that these oscillations in elongation growth rate and variation of curvature travelled from the apex to the base of the coleoptile. Other oscillations in different forms of plant growth have been described in the literature [24], but these reports are infrequent and the features of these oscillations are clearly different from what we have observed in the current study. Indeed most of the growth oscillations reported in the literature so far occur during the nutation of the aerial organ (e.g. in sunflowers [25]), or in particular plant organs/cells such as pollen tubes and root hairs [20, 26, 27].\n\nDuring studies of nutation in sunflowers, oscillations of different growth were identified by comparing growth rates on opposing lateral sides of the plant organ [25]. However, our observed oscillations traveled from the apex of the aerial organ to the base along the median line, and so cannot be accounted for by plant nutation. In addition, the oscillations of growth that have been described in pollen tubes and root hairs [26, 27] are limited to occurring at the very tips of these organs. This scale and localization of growth oscillations are completely...\ndifferent from those observed in our coleoptiles, which occurred along the entire length of the aerial organ.\n\nNeither oscillation period, nor oscillation velocity in REGR significantly differed between tilted and untilted coleoptiles, demonstrating that our gravitropic perturbation had no effect on the oscillatory patterns of REGR. A potential candidate to explain the REGR pulses that were observed in both groups of coleoptiles is auxin, as well-known and major growth factor in plants. The average velocity of propagation of auxin in coleoptiles (12\\text{mm.h}^{-1} according to [28, 29]) is compatible with our own measurements (\\(v_p = 11.3 \\pm 6.0\\text{mm.h}^{-1}\\) for straight coleoptiles and \\(v_p = 12.3 \\pm 6.6\\text{mm.h}^{-1}\\) for tilted coleoptiles). However, the average period of time between two pulses in our data set (\\(t_p = 2.2h\\)) is four to five times longer than the pulses of auxin that have been previously recorded in coleoptiles [30\u201332]. Therefore, while auxin may be driving some aspects of the REGR oscillations in our coleoptiles, the previously known dynamics of auxin can\u2019t completely explain the presence and features of these oscillations.\n\nWhile gravitropic treatment group did not affect features of REGR oscillations, it did affect features of oscillations in curvature variation. Between coleoptiles from the straight and tilted groups there were significant differences in oscillation period and the velocity of oscillation pulses, with tilted coleoptiles demonstrating oscillations with shorter periods that travelled more slowly along the aerial organ. Similar oscillations of curvature variation have been previously identified during gravitropic movement [18]. But no conclusive mechanisms were found to explain these oscillations as the study relied only on apical tracking, a method of gathering global measurements that can neglect more detailed and local movement dynamics (see [20] for a discussion on the limits of apical tracking).\n\nMost interestingly, we observed a relationship between oscillations in REGR and curvature variation in tiled coleoptiles (Fig 8), demonstrating that tilted coleoptiles had greater coupling between curvature and REGR than straight coleoptiles. This relationship was moderately strong and negative, demonstrating that regions of lower REGR were associated with higher variation of curvature, and indicating an asynchronous regulatory mechanism that causes the oscillations of elongation growth and curvature variation to be shifted and slightly out of phase. Local curvature and growth are indeed known to be correlated in plants, and curvature variation can be expressed as a function of the elongation rate:\n\n\\[\n\\frac{DC(s, t)R}{Dt} \\sim \\dot{E}(s, t)\\Delta(s, t)\n\\]\n\nwhere \\(\\Delta(s, t)\\) accounts for the distribution of the differential growth on each side of the coleoptile during elongation [5]. As no global shrinking of plant aerial organs are expected during growth, elongation \\(\\dot{E}(s, t)\\) will always have a positive value. Therefore, the local elongation rate can only modulate the amplitude of curvature rate, but not its sign, so elongation alone cannot affect the direction in which the organ is curved. However, we observed both a negative correlation between REGR and curvature variation oscillations and a fewer than predicted number of overshoots. Combined, these two results seems to indicate the presence of an additional mechanism that is capable of affecting the relationship between local growth and curvature, as well as the sign of curvature rate.\n\nLimitations in our current study prevents us from making further conclusions about the role of correlated oscillations in regulating gravitropism. First, a better understanding and more formal description of this potential mechanism term, could come from comparing the oscillatory behaviors of tilted coleoptiles that did and did not overshoot the vertical. Indeed, greater experimental examination would let us know if and how this regulation changes with variation in non-verticality. However, in the current study the actual number of overshoots\nwas smaller than expected from the theoretical model, and did not provide us with a sample size large enough for statistical comparison with tilted coleoptiles that failed to overshoot the vertical. Given the low rate of overshoots, acquiring a sufficient sample size would require hundreds, perhaps thousands, of wheat coleoptiles to be tested. This approach could also allow us to determine if correlated oscillations in REGR and curvature variation are a general phenomenon among plant species. Secondly, we observed that the oscillations of curvature variation did not disappear after the tilted plants reach a potential gravitropic equilibrium (approached vertical). Without being able to compare plants that did and did not overshoot the vertical, it is impossible to decipher between the possibilities that coupled growth and curvature oscillations is a regulatory mechanism that actively prevents overshoots, and a coincidental observation that tilted coleoptiles both don\u2019t overshoot the vertical as often as predicted and show greater coupled growth and curvature oscillations than straight plants.\n\nIn conclusion, we discovered a non-trivial coupling between the oscillatory dynamics of curvature and elongation in coleoptiles. The relationship between those oscillations and the postural control of the organ remains unclear, but indicates the presence of a mechanism that is capable of affecting the relationship between elongation rate, differential growth, and curvature. While we were unable to formalize our description of this relationship due to study limitations, we have described methodologically straightforward ways to proceed. Continuing this line of study will result in a greater understanding of adaptive mechanisms that allow plants to effectively control their posture throughout their lives.\n\nAcknowledgments\n\nRB wants to thanks St\u00e9phane Ploquin for his help with the experimental setup. All original data are available at [33]. A series of 4 movies are available. They show the timelapse movement of wheat coleoptiles [8, 9] as well as the kinematics of growth and curvature variation [22, 23]\n\nAuthor Contributions\n\nConceptualization: Renaud Bastien, St\u00e9phane Douady, Bruno Moulia.\n\nFormal analysis: Renaud Bastien, Olivia Guayasamin, St\u00e9phane Douady, Bruno Moulia.\n\nInvestigation: Renaud Bastien.\n\nMethodology: Renaud Bastien, St\u00e9phane Douady, Bruno Moulia.\n\nSoftware: Renaud Bastien.\n\nSupervision: St\u00e9phane Douady, Bruno Moulia.\n\nVisualization: Renaud Bastien, Olivia Guayasamin, St\u00e9phane Douady, Bruno Moulia.\n\nWriting \u2013 original draft: Renaud Bastien, St\u00e9phane Douady, Bruno Moulia.\n\nWriting \u2013 review & editing: Renaud Bastien, Olivia Guayasamin, St\u00e9phane Douady, Bruno Moulia.\n\nReferences\n\n1. Moulia B, Coutand C, Lenne C. Posture control and skeletal mechanical acclimation in terrestrial plants: Implications for mechanical modeling of plant architecture. American Journal of Botany. 2006; 93(10):1477\u20131489. https://doi.org/10.3732/ajb.93.10.1477 PMID: 21642095\n2. Moula B, Fournier M. The power and control of gravitropic movements in plants: a biomechanical and systems biology view. J Exp Bot. 2009; 60(2):461\u2013486. https://doi.org/10.1093/jxb/ern341 PMID: 19264759\n\n3. Silk WK. Quantitative descriptions of development. Annual Review of Plant Physiology. 1984; 35:479\u2013518. https://doi.org/10.1146/annurev.pp.35.060184.002403\n\n4. Band LR, Wells DM, Larrieu A, Sun J, Middleton AM, French AP, et al. Root gravitropism is regulated by a transient lateral auxin gradient controlled by a tipping-point mechanism. Proceedings of the National Academy of Sciences. 2012; 109(12):4668\u20134673. https://doi.org/10.1073/pnas.1201498109\n\n5. Bastien R, Douady S, Moula B. A unifying modeling of plant shoot gravitropism with an explicit account of the effects of growth. Frontiers in plant science. 2014; 5:136. https://doi.org/10.3389/fpls.2014.00136 PMID: 24782876\n\n6. Philippar K, Fuchs I, L\u00fcthen H, Hoth S, Bauer CS, Haga K, et al. Auxin-induced K+ channel expression represents an essential step in coleoptile growth and gravitropism. Proceedings of the National Academy of Sciences of the United States of America. 1999; 96(21):12186\u201312191. https://doi.org/10.1073/pnas.96.21.12186 PMID: 10518597\n\n7. Morita MT. Directional gravity sensing in gravitropism. Annual review of plant biology. 2010; 61:705\u2013720. https://doi.org/10.1146/annurev.arplant.043008.092042 PMID: 19152486\n\n8. Bastien R, Douady S, Moula B. The Growth of Wheat Coleoptile: A Collection of 138 Growing Coleoptiles; 2017. Available from: https://www.youtube.com/watch?v=k4yy_Yn_JcE.\n\n9. Bastien R, Douady S, Moula B. The Gravitropism of Wheat Coleoptile: A Collection of 100 Tilted Coleoptiles; 2017. Available from: https://www.youtube.com/watch?v=nSka6Su46Gc.\n\n10. Walter A, Spies H, Terjung S, Kusters R, Kirchgessner N, Schurr U. Spatio-temporal dynamics of expansion growth in roots: automatic quantification of diurnal course and temperature response by digital image sequence processing. J Exp Bot. 2002; 53(369):689\u2013698. https://doi.org/10.1093/jexbot/53.369.689 PMID: 11886889\n\n11. Basu P, Pal A, Lynch JP, Brown KM. A Novel Image-Analysis Technique for Kinematic Study of Growth and Curvature. Plant Physiol. 2007; 145(2):305\u2013316. https://doi.org/10.1104/pp.107.103226 PMID: 17720760\n\n12. Chavaria-Krauser A, Nagel KA, Palme K, Schurr U, Walter A, Scharr H. Spatio-temporal quantification of differential growth processes in root growth zones based on a novel combination of image sequence processing and refined concepts describing curvature production. New Phytologist. 2008; 177(3):811\u2013821. https://doi.org/10.1111/j.1469-8137.2007.02299.x PMID: 18069960\n\n13. Bastien R, Douady S, Moula B. A unified model of shoot tropism in plants: photo-, gravi-and proprioception. PLoS Comput Biol. 2015; 11(2):e1004037. https://doi.org/10.1371/journal.pcbi.1004037 PMID: 25692607\n\n14. Bastien R, Bohr T, Moula B, Douady S. Unifying model of shoot gravitropism reveals proprioception as a central feature of posture control in plants. Proceedings of the National Academy of Sciences. 2013; 110(2):755\u2013760. https://doi.org/10.1073/pnas.1214301109\n\n15. Hamant O, Moula B. How do plants read their own shapes? New Phytologist. 2016.\n\n16. Cosgrove DJ. Rapid, bilateral changes in growth rate and curvature during gravitropism of cucumber hypocotyls: Implications for mechanism of growth control. Plant Cell Environ. 1990; 13(3):227\u201334. https://doi.org/10.1111/j.1365-3040.1990.tb01307.x PMID: 11537501\n\n17. lino M, Tarui Y, Uematsu C. Gravitropism of maize and rice coleoptiles: Dependence on the stimulation angle. Plant Cell and Environment. 1996; 19(10):1160\u20131168. https://doi.org/10.1111/j.1365-3040.1996.tb00431.x\n\n18. Tarui Y, lino M. Gravitropism of oat and wheat coleoptiles: Dependence on the stimulation angle and involvement of autotropic straightening. Plant and Cell Physiology. 1997; 38(12):1346\u20131353. https://doi.org/10.1093/oxfordjournals.pcp.a029128 PMID: 11536867\n\n19. Galland P. Tropisms of Avena coleoptiles: sine law for gravitropism, exponential law for photogravitropic equilibrium. Planta. 2002; 215(5):779\u201384. https://doi.org/10.1007/s00425-002-0813-6 PMID: 12244443\n\n20. Bastien R, Merroz Y. The Kinematics of Plant Nutation Reveals a Simple Relation between Curvature and the Orientation of Differential Growth. PLOS Computational Biology. 2016; 12(12):1\u201320. https://doi.org/10.1371/journal.pcbi.1005238\n\n21. Bastien R, Legland D, Martin M, Fregosi L, Peaucelle A, Douady S, et al. KymoRod: a method for automated kinematic analysis of rod-shaped plant organs. The Plant Journal. 2016. https://doi.org/10.1111/tpj.13255 PMID: 27354251\n\n22. Bastien R, Guayasamin O, Douady S, Moula B. Oscillatory Movement in Wheat Coleoptile: A Study of Growth and Curvature with 90 Growing Coleoptiles; 2017. Available from: https://www.youtube.com/watch?v=5poMGtNXdO.\n23. Bastien R, Guayasamin O, Douady S, Moulia B. Oscillatory Movement during the Gravitropism of Wheat Coleoptile: A Study of Growth and Curvature with 62 Tilted Wheat Coleoptiles; 2017. Available from: https://www.youtube.com/watch?v=HWRY1fgCA1O.\n\n24. Baskin TI. Ultradian Growth Oscillations in Organs: Physiological Signal or Noise? In: Mancuso S SS, editor. Rythms in Plants. Springer; 2006. p. 3\u201317.\n\n25. Berg AR, Peacock K. Growth-Patterns in Nutating and Nonnutating Sunflower (Helianthus-annuus) HYPOCOTYLS. American Journal of Botany. 1992; 79(1):77\u201385. https://doi.org/10.1002/j.1537-2197.1992.tb12626.x\n\n26. Monshausern GB, Bibikova TN, Messerli MA, Shi C, Gilroy S. Oscillations in extracellular pH and reactive oxygen species modulate tip growth of Arabidopsis root hairs. Proceedings of the National Academy of Sciences. 2007; 104(52):20996\u201321001. https://doi.org/10.1073/pnas.0708586104\n\n27. Monshausern GB, Messerli MA, Gilroy S. Imaging of the Yellow Cameleon 3.6 Indicator Reveals That Elevations in Cytosolic Ca2+ Follow Oscillating Increases in Growth in Root Hairs of Arabidopsis. Plant Physiol. 2008; 147(4):1690\u20131698. https://doi.org/10.1104/pp.108.123638 PMID: 18583529\n\n28. Shen-Miller J. Rhythmicity in the basipetal transport of indoleacetic acid through coleoptiles. Plant physiology. 1973; 51(4):615\u2013619. https://doi.org/10.1104/pp.51.4.615 PMID: 16658381\n\n29. Shen-Miller J. Rhythmic Differences in the Basipetal Movement of Indoleacetic Acid between Separated Upper and Lower Halves of Geotropically Stimulated Corn Coleoptiles. Plant Physiol. 1973; 52(2):166\u2013170. https://doi.org/10.1104/pp.52.2.166 PMID: 16658520\n\n30. Kramer EM, Rutschow HL, Marbe SS, AuxV: a database of auxin transport velocities. Trends in plant science. 2011; 16(9):461\u2013463. https://doi.org/10.1016/j.tplants.2011.05.003 PMID: 21684188\n\n31. Goldsmith MHM. Movement of pulses of labeled auxin in corn coleoptiles. Plant physiology. 1967; 42(2):258\u2013263. https://doi.org/10.1104/pp.42.2.258 PMID: 6040894\n\n32. Nick P. Probing the actin-auxin oscillator. Plant signaling & behavior. 2010; 5(2):94\u201398. https://doi.org/10.4161/psb.5.2.10337\n\n33. Bastien R, Douady S, Moulia B. Gravitropism of Wheat Coleoptile; 2017. Available from: https://doi.org/10.5281/zenodo.1100953.", "source": "olmocr", "added": "2025-09-29", "created": "2025-09-29", "metadata": {"Source-File": "tests/gnarly_pdfs/load_v_error.pdf", "olmocr-version": "0.3.4", "pdf-total-pages": 16, "total-input-tokens": 28032, "total-output-tokens": 10748, "total-fallback-pages": 0}, "attributes": {"pdf_page_numbers": [[0, 2729, 1], [2729, 4160, 2], [4160, 8191, 3], [8191, 9859, 4], [9859, 12677, 5], [12677, 15655, 6], [15655, 17368, 7], [17368, 19105, 8], [19105, 20514, 9], [20514, 21872, 10], [21872, 23107, 11], [23107, 24660, 12], [24660, 28776, 13], [28776, 31778, 14], [31778, 36652, 15], [36652, 38923, 16]], "primary_language": ["en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en", "en"], "is_rotation_valid": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "rotation_correction": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "is_table": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "is_diagram": [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false]}}
